// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (1b63e5e7).
//
// k:\_a\a\release\vidgrab_VC6.tli
//
// Wrapper implementations for Win32 type library k:\ocx\vidgrab_VC6.ocx
// compiler-generated file created 11/23/10 at 09:15:48 - DO NOT EDIT!


//
// interface IVideoGrabberVC6 wrapper method implementations
//

#pragma implementation_key(1)
inline enum TxCursors Vidgrab_VC6::IVideoGrabberVC6::GetBusyCursor ( ) {
    enum TxCursors _result;
    HRESULT _hr = raw_GetBusyCursor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetBusyCursor ( enum TxCursors Value ) {
    HRESULT _hr = raw_SetBusyCursor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3)
inline enum TxCursors Vidgrab_VC6::IVideoGrabberVC6::GetVideoCursor ( ) {
    enum TxCursors _result;
    HRESULT _hr = raw_GetVideoCursor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetVideoCursor ( enum TxCursors Value ) {
    HRESULT _hr = raw_SetVideoCursor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5)
inline enum TxCursors Vidgrab_VC6::IVideoGrabberVC6::GetNormalCursor ( ) {
    enum TxCursors _result;
    HRESULT _hr = raw_GetNormalCursor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetNormalCursor ( enum TxCursors Value ) {
    HRESULT _hr = raw_SetNormalCursor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAnalogVideoStandards ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAnalogVideoStandards(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAnalogVideoStandardsCount ( ) {
    long _result;
    HRESULT _hr = raw_GetAnalogVideoStandardsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetBufferCount ( ) {
    long _result;
    HRESULT _hr = raw_GetBufferCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(10)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetASFProfiles ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetASFProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(11)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFProfilesCount ( ) {
    long _result;
    HRESULT _hr = raw_GetASFProfilesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(12)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioBalance ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioBalance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(13)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioCompressorName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioCompressorName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(14)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioInputBalance ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioInputBalance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(15)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioInputLevel ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioInputLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(16)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAudioInputMono ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetAudioInputMono(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(17)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioInputs ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioInputs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(18)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioInputsCount ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioInputsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(19)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioDeviceName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioDeviceName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(20)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioFormats ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioFormats(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(21)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioRendererName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioRendererName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(22)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioVolume ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(23)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetBusy ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetBusy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(24)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetCropping_YMax ( ) {
    long _result;
    HRESULT _hr = raw_GetCropping_YMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(25)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetCropping_XMax ( ) {
    long _result;
    HRESULT _hr = raw_GetCropping_XMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(26)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetCurrentFrameRate ( ) {
    double _result;
    HRESULT _hr = raw_GetCurrentFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(27)
inline enum TxCurrentState Vidgrab_VC6::IVideoGrabberVC6::GetCurrentState ( ) {
    enum TxCurrentState _result;
    HRESULT _hr = raw_GetCurrentState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(28)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetDeliveredFrames ( ) {
    double _result;
    HRESULT _hr = raw_GetDeliveredFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(29)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetDirectShowFilters ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetDirectShowFilters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(30)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDirectShowFiltersCount ( ) {
    long _result;
    HRESULT _hr = raw_GetDirectShowFiltersCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(31)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_VideoHeight ( ) {
    long _result;
    HRESULT _hr = raw_GetDisplay_VideoHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(32)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_VideoWidth ( ) {
    long _result;
    HRESULT _hr = raw_GetDisplay_VideoWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(33)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDroppedFrameCount ( ) {
    long _result;
    HRESULT _hr = raw_GetDroppedFrameCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(34)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_VideoWindowHandle ( ) {
    long _result;
    HRESULT _hr = raw_GetDisplay_VideoWindowHandle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(35)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_VideoWindowHandle ( ) {
    long _result;
    HRESULT _hr = raw_GetDualDisplay_VideoWindowHandle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(36)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioCompressors ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioCompressors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(37)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioCompressorsCount ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioCompressorsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(38)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioDevices ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioDevices(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(39)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioDevicesCount ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioDevicesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(40)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioRenderers ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioRenderers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(41)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioRenderersCount ( ) {
    long _result;
    HRESULT _hr = raw_GetAudioRenderersCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(42)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_VideoHeight ( ) {
    long _result;
    HRESULT _hr = raw_GetDualDisplay_VideoHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(43)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_VideoWidth ( ) {
    long _result;
    HRESULT _hr = raw_GetDualDisplay_VideoWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(44)
inline enum TxFrameGrabberRGBFormat Vidgrab_VC6::IVideoGrabberVC6::GetFrameGrabberCurrentRGBFormat ( ) {
    enum TxFrameGrabberRGBFormat _result;
    HRESULT _hr = raw_GetFrameGrabberCurrentRGBFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(45)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetHoldRecording ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetHoldRecording(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(46)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlaySelector ( ) {
    long _result;
    HRESULT _hr = raw_GetImageOverlaySelector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(47)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetImageRatio ( ) {
    double _result;
    HRESULT _hr = raw_GetImageRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(48)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetInFrameProgressEvent ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetInFrameProgressEvent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(49)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsAnalogVideoDecoderAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsAnalogVideoDecoderAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(50)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsAudioCrossbarAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsAudioCrossbarAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(51)
inline enum TxTriState Vidgrab_VC6::IVideoGrabberVC6::GetIsAudioInputBalanceAvailable ( ) {
    enum TxTriState _result;
    HRESULT _hr = raw_GetIsAudioInputBalanceAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(52)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsCameraControlAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsCameraControlAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(53)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsDigitalVideoIn ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsDigitalVideoIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(54)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsDVCommandAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsDVCommandAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(55)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsHorizontalSyncLocked ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsHorizontalSyncLocked(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(56)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsMpegStream ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsMpegStream(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(57)
inline enum TxTriState Vidgrab_VC6::IVideoGrabberVC6::GetIsPlayerAudioStreamAvailable ( ) {
    enum TxTriState _result;
    HRESULT _hr = raw_GetIsPlayerAudioStreamAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(58)
inline enum TxTriState Vidgrab_VC6::IVideoGrabberVC6::GetIsPlayerVideoStreamAvailable ( ) {
    enum TxTriState _result;
    HRESULT _hr = raw_GetIsPlayerVideoStreamAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(59)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsRecordingPaused ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsRecordingPaused(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(60)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetTimeCodeReaderAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetTimeCodeReaderAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(61)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsTVAudioAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsTVAudioAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(62)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsTVAutoTuneRunning ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsTVAutoTuneRunning(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(63)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsTVTunerAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsTVTunerAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(64)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsVideoControlAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsVideoControlAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(65)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsVideoCrossbarAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsVideoCrossbarAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(66)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsVideoQualityAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsVideoQualityAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(67)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsVideoPortAvailable ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsVideoPortAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(68)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsVideoInterlaced ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsVideoInterlaced(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(69)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetIsWDMVideoDriver ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetIsWDMVideoDriver(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(70)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetLast_BurstFrameCapture_FileName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetLast_BurstFrameCapture_FileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(71)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetLast_CaptureFrameTo_FileName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetLast_CaptureFrameTo_FileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(72)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetLast_Recording_FileName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetLast_Recording_FileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(73)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetLast_Clip_Played ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetLast_Clip_Played(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(74)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_GlobalMotionRatio ( ) {
    double _result;
    HRESULT _hr = raw_GetMotionDetector_GlobalMotionRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(75)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_GridXCount ( ) {
    long _result;
    HRESULT _hr = raw_GetMotionDetector_GridXCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(76)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_GridYCount ( ) {
    long _result;
    HRESULT _hr = raw_GetMotionDetector_GridYCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(77)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_IsGridValid ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetMotionDetector_IsGridValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(78)
inline enum TxMpegStreamType Vidgrab_VC6::IVideoGrabberVC6::GetMpegStreamType ( ) {
    enum TxMpegStreamType _result;
    HRESULT _hr = raw_GetMpegStreamType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(79)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexerName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetMultiplexerName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(80)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexers ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetMultiplexers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(81)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexersCount ( ) {
    long _result;
    HRESULT _hr = raw_GetMultiplexersCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(82)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetPlaylistIndex ( ) {
    long _result;
    HRESULT _hr = raw_GetPlaylistIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(83)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPlayerDuration ( ) {
    double _result;
    HRESULT _hr = raw_GetPlayerDuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(84)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPlayerFrameCount ( ) {
    double _result;
    HRESULT _hr = raw_GetPlayerFrameCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(85)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPlayerFramePosition ( ) {
    double _result;
    HRESULT _hr = raw_GetPlayerFramePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(86)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPlayerTimePosition ( ) {
    double _result;
    HRESULT _hr = raw_GetPlayerTimePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(87)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPlayerFrameRate ( ) {
    double _result;
    HRESULT _hr = raw_GetPlayerFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(88)
inline enum TxPlayerState Vidgrab_VC6::IVideoGrabberVC6::GetPlayerState ( ) {
    enum TxPlayerState _result;
    HRESULT _hr = raw_GetPlayerState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(89)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRecordingBacktimedFramesCount ( ) {
    long _result;
    HRESULT _hr = raw_GetRecordingBacktimedFramesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(90)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetRecordingCanPause ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetRecordingCanPause(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(91)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetRecordingDuration ( ) {
    double _result;
    HRESULT _hr = raw_GetRecordingDuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(92)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetRecordingFourCC ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetRecordingFourCC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(93)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRecordingHeight ( ) {
    long _result;
    HRESULT _hr = raw_GetRecordingHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(94)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRecordingWidth ( ) {
    long _result;
    HRESULT _hr = raw_GetRecordingWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(95)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencodingStartFrame ( ) {
    double _result;
    HRESULT _hr = raw_GetReencodingStartFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(96)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencodingStartTime ( ) {
    double _result;
    HRESULT _hr = raw_GetReencodingStartTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(97)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencodingStopFrame ( ) {
    double _result;
    HRESULT _hr = raw_GetReencodingStopFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(98)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencodingStopTime ( ) {
    double _result;
    HRESULT _hr = raw_GetReencodingStopTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(99)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetSendToDV_DeviceIndex ( ) {
    long _result;
    HRESULT _hr = raw_GetSendToDV_DeviceIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(100)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetSpeakerBalance ( ) {
    long _result;
    HRESULT _hr = raw_GetSpeakerBalance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(101)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetSpeakerVolume ( ) {
    long _result;
    HRESULT _hr = raw_GetSpeakerVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(102)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetStreamingURL ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetStreamingURL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(103)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetSystemTempPath ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetSystemTempPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(104)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlaySelector ( ) {
    long _result;
    HRESULT _hr = raw_GetTextOverlaySelector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(105)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTVChannel ( ) {
    long _result;
    HRESULT _hr = raw_GetTVChannel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(106)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTVCountryCode ( ) {
    long _result;
    HRESULT _hr = raw_GetTVCountryCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(107)
inline enum TxTunerInputType Vidgrab_VC6::IVideoGrabberVC6::GetTVTunerInputType ( ) {
    enum TxTunerInputType _result;
    HRESULT _hr = raw_GetTVTunerInputType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(108)
inline enum TxTunerMode Vidgrab_VC6::IVideoGrabberVC6::GetTunerMode ( ) {
    enum TxTunerMode _result;
    HRESULT _hr = raw_GetTunerMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(109)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetUniqueID ( ) {
    long _result;
    HRESULT _hr = raw_GetUniqueID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(110)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVCRHorizontalLocking ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetVCRHorizontalLocking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(111)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompressorName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoCompressorName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(112)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompressors ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoCompressors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(113)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompressorsCount ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoCompressorsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(114)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoDevices ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoDevices(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(115)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoDevicesId ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoDevicesId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(116)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoDevicesCount ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoDevicesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(117)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoFormats ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoFormats(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(118)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoFormatsCount ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoFormatsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(119)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoInputs ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoInputs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(120)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoInputsCount ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoInputsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(121)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoDeviceName ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoDeviceName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(122)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoSizes ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoSizes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(123)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoSizesCount ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoSizesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(124)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoHeight ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(125)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoHeight_PreferredAspectRatio ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoHeight_PreferredAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(126)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoWidth ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(127)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoWidth_PreferredAspectRatio ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoWidth_PreferredAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(128)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoSources ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoSources(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(129)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoSourcesCount ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoSourcesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(130)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoSubtypes ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoSubtypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(131)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoSubtypesCount ( ) {
    long _result;
    HRESULT _hr = raw_GetVideoSubtypesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(132)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetAudioBalance ( long Value ) {
    HRESULT _hr = raw_SetAudioBalance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(133)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetAudioInputBalance ( long Value ) {
    HRESULT _hr = raw_SetAudioInputBalance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(134)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetAudioInputLevel ( long Value ) {
    HRESULT _hr = raw_SetAudioInputLevel(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(135)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetAudioInputMono ( VARIANT_BOOL Value ) {
    HRESULT _hr = raw_SetAudioInputMono(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(136)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetAudioVolume ( long Value ) {
    HRESULT _hr = raw_SetAudioVolume(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(137)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetBufferCount ( long Value ) {
    HRESULT _hr = raw_SetBufferCount(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(138)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetHoldRecording ( VARIANT_BOOL Value ) {
    HRESULT _hr = raw_SetHoldRecording(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(139)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetImageOverlaySelector ( long Value ) {
    HRESULT _hr = raw_SetImageOverlaySelector(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(140)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetMpegStreamType ( enum TxMpegStreamType Value ) {
    HRESULT _hr = raw_SetMpegStreamType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(141)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetPlaylistIndex ( long Value ) {
    HRESULT _hr = raw_SetPlaylistIndex(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(142)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetPlayerDuration ( double Value ) {
    HRESULT _hr = raw_SetPlayerDuration(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(143)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetPlayerFramePosition ( double Value ) {
    HRESULT _hr = raw_SetPlayerFramePosition(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(144)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetPlayerTimePosition ( double Value ) {
    HRESULT _hr = raw_SetPlayerTimePosition(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(145)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetRecordingBacktimedFramesCount ( long Value ) {
    HRESULT _hr = raw_SetRecordingBacktimedFramesCount(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(146)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetRecordingCanPause ( VARIANT_BOOL Value ) {
    HRESULT _hr = raw_SetRecordingCanPause(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(147)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetReencodingStartFrame ( double Value ) {
    HRESULT _hr = raw_SetReencodingStartFrame(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(148)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetReencodingStartTime ( double Value ) {
    HRESULT _hr = raw_SetReencodingStartTime(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(149)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetReencodingStopFrame ( double Value ) {
    HRESULT _hr = raw_SetReencodingStopFrame(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(150)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetReencodingStopTime ( double Value ) {
    HRESULT _hr = raw_SetReencodingStopTime(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(151)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetSendToDV_DeviceIndex ( long Value ) {
    HRESULT _hr = raw_SetSendToDV_DeviceIndex(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(152)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetSpeakerBalance ( long Value ) {
    HRESULT _hr = raw_SetSpeakerBalance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(153)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetSpeakerVolume ( long Value ) {
    HRESULT _hr = raw_SetSpeakerVolume(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(154)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetTextOverlaySelector ( long Value ) {
    HRESULT _hr = raw_SetTextOverlaySelector(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(155)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetTVChannel ( long Value ) {
    HRESULT _hr = raw_SetTVChannel(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(156)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetTVCountryCode ( long Value ) {
    HRESULT _hr = raw_SetTVCountryCode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(157)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetTVTunerInputType ( enum TxTunerInputType Value ) {
    HRESULT _hr = raw_SetTVTunerInputType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(158)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetTunerMode ( enum TxTunerMode Value ) {
    HRESULT _hr = raw_SetTunerMode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(159)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetVCRHorizontalLocking ( VARIANT_BOOL Value ) {
    HRESULT _hr = raw_SetVCRHorizontalLocking(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(160)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Font ( ) {
    long _result;
    HRESULT _hr = raw_GetTextOverlay_Font(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(161)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetTextOverlay_Font ( long Value ) {
    HRESULT _hr = raw_SetTextOverlay_Font(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(162)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::About ( ) {
    HRESULT _hr = raw_About();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(163)
inline long Vidgrab_VC6::IVideoGrabberVC6::AnalogVideoStandardIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_AnalogVideoStandardIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(164)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::ASFStreaming_GetAuthorizationList ( ) {
    BSTR _result;
    HRESULT _hr = raw_ASFStreaming_GetAuthorizationList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(165)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::ASFStreaming_GetConnectedClients ( ) {
    BSTR _result;
    HRESULT _hr = raw_ASFStreaming_GetConnectedClients(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(166)
inline long Vidgrab_VC6::IVideoGrabberVC6::ASFStreaming_GetConnectedClientsCount ( ) {
    long _result;
    HRESULT _hr = raw_ASFStreaming_GetConnectedClientsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(167)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ASFStreaming_ResetAuthorizations ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ASFStreaming_ResetAuthorizations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(168)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ASFStreaming_SetAuthorization ( VARIANT_BOOL Allowed, _bstr_t IP, _bstr_t Mask ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ASFStreaming_SetAuthorization(Allowed, IP, Mask, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(169)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::AssociateMultiplexedSlave ( long InputNumber, long SlaveUniqueID ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_AssociateMultiplexedSlave(InputNumber, SlaveUniqueID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(170)
inline long Vidgrab_VC6::IVideoGrabberVC6::AudioCompressorIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_AudioCompressorIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(171)
inline long Vidgrab_VC6::IVideoGrabberVC6::AudioDeviceIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_AudioDeviceIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(172)
inline long Vidgrab_VC6::IVideoGrabberVC6::AudioRendererIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_AudioRendererIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(173)
inline long Vidgrab_VC6::IVideoGrabberVC6::AudioInputIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_AudioInputIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(174)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::AVIInfo2 ( _bstr_t AVIFile, enum TxAVIInfoType AVIInfoType ) {
    BSTR _result;
    HRESULT _hr = raw_AVIInfo2(AVIFile, AVIInfoType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(175)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::AVIHeaderInfo ( _bstr_t AVIFile, enum TxHeaderAttribute HeaderAttribute ) {
    BSTR _result;
    HRESULT _hr = raw_AVIHeaderInfo(AVIFile, HeaderAttribute, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(176)
inline long Vidgrab_VC6::IVideoGrabberVC6::CameraControlValue ( enum TxCameraControl Setting ) {
    long _result;
    HRESULT _hr = raw_CameraControlValue(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(177)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::CameraControlAuto ( enum TxCameraControl Setting ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_CameraControlAuto(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(178)
inline long Vidgrab_VC6::IVideoGrabberVC6::CameraControlDefault ( enum TxCameraControl Setting ) {
    long _result;
    HRESULT _hr = raw_CameraControlDefault(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(179)
inline long Vidgrab_VC6::IVideoGrabberVC6::CameraControlMin ( enum TxCameraControl Setting ) {
    long _result;
    HRESULT _hr = raw_CameraControlMin(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(180)
inline long Vidgrab_VC6::IVideoGrabberVC6::CameraControlMax ( enum TxCameraControl Setting ) {
    long _result;
    HRESULT _hr = raw_CameraControlMax(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(181)
inline long Vidgrab_VC6::IVideoGrabberVC6::CameraControlStep ( enum TxCameraControl Setting ) {
    long _result;
    HRESULT _hr = raw_CameraControlStep(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(182)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::Cancel ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_Cancel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(183)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::CanProcessMessages ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_CanProcessMessages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(184)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::CaptureFrameTo ( enum TxFrameCaptureDest Dest, _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_CaptureFrameTo(Dest, FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(185)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::CaptureFrameSyncTo ( enum TxFrameCaptureDest Dest, _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_CaptureFrameSyncTo(Dest, FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(186)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::ClearHeaderAttributes ( ) {
    HRESULT _hr = raw_ClearHeaderAttributes();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(187)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::ClosePlayer ( ) {
    HRESULT _hr = raw_ClosePlayer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(188)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetLastFrameAsHBITMAP ( long BufferIndex, VARIANT_BOOL WithOverlays, long SrcLeftLocation, long SrcTopLocation, long SrcWidth, long SrcHeight, long DestWidth, long DestHeight, long BitmapColorBitCount ) {
    long _result;
    HRESULT _hr = raw_GetLastFrameAsHBITMAP(BufferIndex, WithOverlays, SrcLeftLocation, SrcTopLocation, SrcWidth, SrcHeight, DestWidth, DestHeight, BitmapColorBitCount, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(189)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::CreatePreallocCapFile ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_CreatePreallocCapFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(190)
inline double Vidgrab_VC6::IVideoGrabberVC6::DVDInfo ( _bstr_t DVDRootDirectory, enum TxDVDInfoType DVDInfoType, long TitleNumber ) {
    double _result;
    HRESULT _hr = raw_DVDInfo(DVDRootDirectory, DVDInfoType, TitleNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(191)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::Display_SetLocation ( long WindowLeft, long WindowTop, long WindowWidth, long WindowHeight ) {
    HRESULT _hr = raw_Display_SetLocation(WindowLeft, WindowTop, WindowWidth, WindowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(192)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::DestroyComponent ( ) {
    HRESULT _hr = raw_DestroyComponent();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(193)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::DualDisplay_SetLocation ( long WindowLeft, long WindowTop, long WindowWidth, long WindowHeight ) {
    HRESULT _hr = raw_DualDisplay_SetLocation(WindowLeft, WindowTop, WindowWidth, WindowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(194)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::DrawBitmapOverFrame ( long BitmapHandle, VARIANT_BOOL Stretched, long LeftLocation, long TopLocation, long bmWidth, long bmHeight, VARIANT_BOOL Transparent, VARIANT_BOOL UseTransparentColor, unsigned long TransparentColorValue, VARIANT_BOOL AlphaBlend, long AlphaBlendValue, VARIANT_BOOL ChromaKey, long ChromaKeyRGBColor, long ChromaKeyLeewayPercent ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_DrawBitmapOverFrame(BitmapHandle, Stretched, LeftLocation, TopLocation, bmWidth, bmHeight, Transparent, UseTransparentColor, TransparentColorValue, AlphaBlend, AlphaBlendValue, ChromaKey, ChromaKeyRGBColor, ChromaKeyLeewayPercent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(195)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::EnumerateWindows ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_EnumerateWindows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(196)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::EnableMultiplexedInput ( long InputNumber, VARIANT_BOOL Enable ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_EnableMultiplexedInput(InputNumber, Enable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(197)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::FastForwardPlayer ( ) {
    HRESULT _hr = raw_FastForwardPlayer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(198)
inline long Vidgrab_VC6::IVideoGrabberVC6::FindIndexInListByName ( _bstr_t List, _bstr_t SearchedString, VARIANT_BOOL IsSubString, VARIANT_BOOL IgnoreCase ) {
    long _result;
    HRESULT _hr = raw_FindIndexInListByName(List, SearchedString, IsSubString, IgnoreCase, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(199)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAudioCodec ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetAudioCodec(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(200)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetFrameInfo ( long FrameId, enum TxFrameInfoId FrameInfoId ) {
    long _result;
    HRESULT _hr = raw_GetFrameInfo(FrameId, FrameInfoId, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(201)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetFrameInfoString ( enum TxFrameInfoStringId FrameInfoStringId ) {
    BSTR _result;
    HRESULT _hr = raw_GetFrameInfoString(FrameInfoStringId, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(202)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetItemNameFromList ( _bstr_t List, long ItemIndex ) {
    BSTR _result;
    HRESULT _hr = raw_GetItemNameFromList(List, ItemIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(203)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMiscDeviceControl ( enum TxMiscDeviceControl MiscDeviceControl, long Index ) {
    long _result;
    HRESULT _hr = raw_GetMiscDeviceControl(MiscDeviceControl, Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(204)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetLogString ( enum TxLogType param1 ) {
    BSTR _result;
    HRESULT _hr = raw_GetLogString(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(205)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetNearestVideoWidth ( long PreferredVideoWidth, long PreferredVideoHeight ) {
    long _result;
    HRESULT _hr = raw_GetNearestVideoWidth(PreferredVideoWidth, PreferredVideoHeight, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(206)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetNearestVideoHeight ( long PreferredVideoWidth, long PreferredVideoHeight ) {
    long _result;
    HRESULT _hr = raw_GetNearestVideoHeight(PreferredVideoWidth, PreferredVideoHeight, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(207)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetPlayerOpenProgressPercent ( ) {
    long _result;
    HRESULT _hr = raw_GetPlayerOpenProgressPercent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(208)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetPlaylist ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetPlaylist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(209)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetTranslatedCoordinates ( long DisplayIndex, long NativeX, long NativeY, long * TranslatedX, long * TranslatedY ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetTranslatedCoordinates(DisplayIndex, NativeX, NativeY, TranslatedX, TranslatedY, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(210)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTVChannelInfo ( enum TxTVChannelInfo param1 ) {
    long _result;
    HRESULT _hr = raw_GetTVChannelInfo(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(211)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoCodec ( ) {
    BSTR _result;
    HRESULT _hr = raw_GetVideoCodec(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(212)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoWidthFromIndex ( long Index ) {
    long _result;
    HRESULT _hr = raw_GetVideoWidthFromIndex(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(213)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoHeightFromIndex ( long Index ) {
    long _result;
    HRESULT _hr = raw_GetVideoHeightFromIndex(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(214)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::GetNearestVideoSize ( long PreferredVideoWidth, long PreferredVideoHeight, long * NearestVideoWidth, long * NearestVideoHeight ) {
    HRESULT _hr = raw_GetNearestVideoSize(PreferredVideoWidth, PreferredVideoHeight, NearestVideoWidth, NearestVideoHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(215)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVMR9ImageAdjustmentBounds ( VARIANT_BOOL MainDisplay, enum TxVMR9ImageAdjustment VMR9ControlSetting, long * MinValue, long * MaxValue, long * StepSize, long * DefaultValue, long * CurrentValue ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetVMR9ImageAdjustmentBounds(MainDisplay, VMR9ControlSetting, MinValue, MaxValue, StepSize, DefaultValue, CurrentValue, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(216)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoSizeFromIndex ( long Index, long * _VideoWidth, long * _VideoHeight ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetVideoSizeFromIndex(Index, _VideoWidth, _VideoHeight, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(217)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::AVIDuration ( _bstr_t AVIFile, double * Duration, double * FrameCount ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_AVIDuration(AVIFile, Duration, FrameCount, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(218)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::AVIInfo ( _bstr_t AVIFile, double * Duration, double * FrameCount, long * _VideoWidth, long * _VideoHeight, double * VideoFrameRateFps, long * AvgBitRate, long * AudioChannels, long * AudioSamplesPerSec, long * AudioBitsPerSample, BSTR * VideoCodec, BSTR * AudioCodec ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_AVIInfo(AVIFile, Duration, FrameCount, _VideoWidth, _VideoHeight, VideoFrameRateFps, AvgBitRate, AudioChannels, AudioSamplesPerSec, AudioBitsPerSample, VideoCodec, AudioCodec, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(219)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompressionSettings ( long * DataRate, long * KeyFrameRate, long * PFramesPerKeyFrame, long * WindowSize, double * Quality, VARIANT_BOOL * CanQuality, VARIANT_BOOL * CanCrunch, VARIANT_BOOL * CanKeyFrame, VARIANT_BOOL * CanBFrame, VARIANT_BOOL * CanWindow ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_GetVideoCompressionSettings(DataRate, KeyFrameRate, PFramesPerKeyFrame, WindowSize, Quality, CanQuality, CanCrunch, CanKeyFrame, CanBFrame, CanWindow, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(220)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRGBPixelAt ( long x, long y ) {
    long _result;
    HRESULT _hr = raw_GetRGBPixelAt(x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(221)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPixelsDistance ( long x1, long y1, long x2, long y2 ) {
    double _result;
    HRESULT _hr = raw_GetPixelsDistance(x1, y1, x2, y2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(222)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVUMeterSetting ( long ChannelIndex, enum TxVUMeterSetting VUMeterSetting ) {
    long _result;
    HRESULT _hr = raw_GetVUMeterSetting(ChannelIndex, VUMeterSetting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(223)
inline enum TxGraphState Vidgrab_VC6::IVideoGrabberVC6::GraphState ( ) {
    enum TxGraphState _result;
    HRESULT _hr = raw_GraphState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(224)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsAudioDeviceConnected ( long DeviceIndex ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsAudioDeviceConnected(DeviceIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(225)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsAudioDeviceASoundCard ( long DeviceIndex ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsAudioDeviceASoundCard(DeviceIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(226)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsAudioRendererConnected ( long RendererIndex ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsAudioRendererConnected(RendererIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(227)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsCameraControlSettingAvailable ( enum TxCameraControl Setting ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsCameraControlSettingAvailable(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(228)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsDialogAvailable ( enum TxDialog Dialog ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsDialogAvailable(Dialog, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(229)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsDirectX8OrHigherInstalled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsDirectX8OrHigherInstalled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(230)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsPlaylistActive ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsPlaylistActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(231)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsVideoQualitySettingAvailable ( enum TxVideoQuality Setting ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsVideoQualitySettingAvailable(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(232)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsVideoControlModeAvailable ( enum TxVideoControl Mode ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsVideoControlModeAvailable(Mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(233)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsVMR9ImageAdjustmentAvailable ( VARIANT_BOOL MainDisplay ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsVMR9ImageAdjustmentAvailable(MainDisplay, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(234)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsVideoDeviceConnected ( long DeviceIndex ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsVideoDeviceConnected(DeviceIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(235)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsVideoSignalDetected ( VARIANT_BOOL DetectConnexantBlueScreen, VARIANT_BOOL DetectCustomRGB, long CustomR, long CustomG, long CustomB, VARIANT_BOOL UseAsMaxValues ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsVideoSignalDetected(DetectConnexantBlueScreen, DetectCustomRGB, CustomR, CustomG, CustomB, UseAsMaxValues, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(236)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsDVDevice ( long Index ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsDVDevice(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(237)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::LoadCompressorSettingsFromDataString ( VARIANT_BOOL IsVideoCompressor, long CompressorIndex, _bstr_t DataString ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_LoadCompressorSettingsFromDataString(IsVideoCompressor, CompressorIndex, DataString, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(238)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::LoadCompressorSettingsFromTextFile ( VARIANT_BOOL IsVideoCompressor, long CompressorIndex, _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_LoadCompressorSettingsFromTextFile(IsVideoCompressor, CompressorIndex, FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(239)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetLocation ( long lLeft, long lTop, long lWidth, long lHeight ) {
    HRESULT _hr = raw_SetLocation(lLeft, lTop, lWidth, lHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(240)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::MixAudioSamples ( long pSampleBuffer, long SampleBufferSize, long SampleDataLength, enum TxFormatType SampleFormatType, long pFormat, double SampleStartTime, double SampleStopTime ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_MixAudioSamples(pSampleBuffer, SampleBufferSize, SampleDataLength, SampleFormatType, pFormat, SampleStartTime, SampleStopTime, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(241)
inline long Vidgrab_VC6::IVideoGrabberVC6::MonitorsCount ( ) {
    long _result;
    HRESULT _hr = raw_MonitorsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(242)
inline double Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_CellMotionRatio ( long x, long y ) {
    double _result;
    HRESULT _hr = raw_MotionDetector_CellMotionRatio(x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(243)
inline long Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_CellColorIntensity ( enum TxRGBSelector RGBSelector, long x, long y ) {
    long _result;
    HRESULT _hr = raw_MotionDetector_CellColorIntensity(RGBSelector, x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(244)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_Get2DTextGrid ( ) {
    BSTR _result;
    HRESULT _hr = raw_MotionDetector_Get2DTextGrid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(245)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_Get2DTextMotion ( ) {
    BSTR _result;
    HRESULT _hr = raw_MotionDetector_Get2DTextMotion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(246)
inline long Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_GlobalColorIntensity ( enum TxRGBSelector RGBSelector ) {
    long _result;
    HRESULT _hr = raw_MotionDetector_GlobalColorIntensity(RGBSelector, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(247)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_GetCellLocation ( long x, long y, long * XLocation, long * YLocation ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_MotionDetector_GetCellLocation(x, y, XLocation, YLocation, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(248)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_GetCellSensitivity ( long x, long y, long * param3 ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_MotionDetector_GetCellSensitivity(x, y, param3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(249)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_GetCellSize ( long * XSize, long * YSize ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_MotionDetector_GetCellSize(XSize, YSize, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(250)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_SetCellSensitivity ( long x, long y, long param3 ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_MotionDetector_SetCellSensitivity(x, y, param3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(251)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_SetGridSize ( long x, long y ) {
    HRESULT _hr = raw_MotionDetector_SetGridSize(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(252)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_GloballyIncOrDecSensitivity ( long Value ) {
    HRESULT _hr = raw_MotionDetector_GloballyIncOrDecSensitivity(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(253)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_ResetGlobalSensitivity ( long Value ) {
    HRESULT _hr = raw_MotionDetector_ResetGlobalSensitivity(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(254)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_Reset ( ) {
    HRESULT _hr = raw_MotionDetector_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(255)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_ShowGridDialog ( ) {
    HRESULT _hr = raw_MotionDetector_ShowGridDialog();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(256)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_TriggerNow ( ) {
    HRESULT _hr = raw_MotionDetector_TriggerNow();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(257)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::MotionDetector_UseThisReferenceSample ( long Bitmap_, _bstr_t BMPFile, _bstr_t JPEGFile ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_MotionDetector_UseThisReferenceSample(Bitmap_, BMPFile, JPEGFile, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(258)
inline long Vidgrab_VC6::IVideoGrabberVC6::MultiplexerIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_MultiplexerIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(259)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::NotifyPlayerTrackbarAction ( enum TxTrackbarAction TrackbarAction ) {
    HRESULT _hr = raw_NotifyPlayerTrackbarAction(TrackbarAction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(260)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::OpenPlayer ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_OpenPlayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(261)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::OpenDVD ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_OpenDVD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(262)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::OpenPlayerAtFramePositions ( double StartFrame, double StopFrame, VARIANT_BOOL KeepBounds, VARIANT_BOOL CloseAndReopenIfAlreadyOpened ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_OpenPlayerAtFramePositions(StartFrame, StopFrame, KeepBounds, CloseAndReopenIfAlreadyOpened, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(263)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::OpenPlayerAtTimePositions ( double StartTime, double StopTime, VARIANT_BOOL KeepBounds, VARIANT_BOOL CloseAndReopenIfAlreadyOpened ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_OpenPlayerAtTimePositions(StartTime, StopTime, KeepBounds, CloseAndReopenIfAlreadyOpened, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(264)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::PauseRecording ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_PauseRecording(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(265)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::PausePlayer ( ) {
    HRESULT _hr = raw_PausePlayer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(266)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::PlayerFrameStep ( long FrameCount ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_PlayerFrameStep(FrameCount, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(267)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::Playlist ( enum TxPlaylist PlaylistAction, _bstr_t VideoClip ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_Playlist(PlaylistAction, VideoClip, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(268)
inline long Vidgrab_VC6::IVideoGrabberVC6::RecordingKBytesWrittenToDisk ( ) {
    long _result;
    HRESULT _hr = raw_RecordingKBytesWrittenToDisk(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(269)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ReencodeVideoClip ( _bstr_t SourceVideoClip, _bstr_t NewVideoClip, VARIANT_BOOL IncludeVideoStream, VARIANT_BOOL IncludeAudioStream, VARIANT_BOOL UseFrameGrabber, VARIANT_BOOL UseCurrentVideoCompressor, VARIANT_BOOL UseCurrentAudioCompressor ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ReencodeVideoClip(SourceVideoClip, NewVideoClip, IncludeVideoStream, IncludeAudioStream, UseFrameGrabber, UseCurrentVideoCompressor, UseCurrentAudioCompressor, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(270)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::RefreshDevicesAndCompressorsLists ( ) {
    HRESULT _hr = raw_RefreshDevicesAndCompressorsLists();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(271)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::RefreshPlayerOverlays ( ) {
    HRESULT _hr = raw_RefreshPlayerOverlays();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(272)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ResetVideoDeviceSettings ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ResetVideoDeviceSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(273)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ResumeRecording ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ResumeRecording(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(274)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::RewindPlayer ( ) {
    HRESULT _hr = raw_RewindPlayer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(275)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::RunPlayer ( ) {
    HRESULT _hr = raw_RunPlayer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(276)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::RunPlayerBackwards ( ) {
    HRESULT _hr = raw_RunPlayerBackwards();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(277)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::StartSynchronized ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_StartSynchronized(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(278)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoCompressorIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_VideoCompressorIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(279)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoDeviceIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_VideoDeviceIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(280)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoFormatIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_VideoFormatIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(281)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoInputIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_VideoInputIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(282)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoSizeIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_VideoSizeIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(283)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoSubtypeIndex ( _bstr_t param1 ) {
    long _result;
    HRESULT _hr = raw_VideoSubtypeIndex(param1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(284)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SendDVCommand ( enum TxDVCommand DVCommand ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SendDVCommand(DVCommand, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(285)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SendIPCameraCommand ( _bstr_t IPCameraCommand ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SendIPCameraCommand(IPCameraCommand, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(286)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetAuthentication ( enum TxAuthenticationType AuthenticationType, _bstr_t UserName, _bstr_t Password ) {
    HRESULT _hr = raw_SetAuthentication(AuthenticationType, UserName, Password);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(287)
inline long Vidgrab_VC6::IVideoGrabberVC6::Mixer_AddToMixer ( long SourceUniqueID, long SourceVideoInput, long MosaicLine, long MosaicColumn, long AlternatedGroup, long AlternatedTimeIntervalInMs, VARIANT_BOOL ReplacePreviouslyAdded, VARIANT_BOOL CanEraseBackground ) {
    long _result;
    HRESULT _hr = raw_Mixer_AddToMixer(SourceUniqueID, SourceVideoInput, MosaicLine, MosaicColumn, AlternatedGroup, AlternatedTimeIntervalInMs, ReplacePreviouslyAdded, CanEraseBackground, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(288)
inline long Vidgrab_VC6::IVideoGrabberVC6::Mixer_SetupPIPFromSource ( long SourceUniqueID, long Source_Left, long Source_Top, long Source_Width, long Source_Height, VARIANT_BOOL ActivatePIP, long PIP_Left, long PIP_Top, long PIP_Width, long PIP_Height, VARIANT_BOOL MoveToTop ) {
    long _result;
    HRESULT _hr = raw_Mixer_SetupPIPFromSource(SourceUniqueID, Source_Left, Source_Top, Source_Width, Source_Height, ActivatePIP, PIP_Left, PIP_Top, PIP_Width, PIP_Height, MoveToTop, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(289)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::Mixer_Activation ( long Id, VARIANT_BOOL Activate ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_Mixer_Activation(Id, Activate, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(290)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::Mixer_RemoveFromMixer ( long Id ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_Mixer_RemoveFromMixer(Id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(291)
inline long Vidgrab_VC6::IVideoGrabberVC6::MPEGProgramSetting ( enum TxMPEGProgramSetting MPEGProgramSetting, long param2 ) {
    long _result;
    HRESULT _hr = raw_MPEGProgramSetting(MPEGProgramSetting, param2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(292)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::SaveCompressorSettingsToDataString ( VARIANT_BOOL IsVideoCompressor, long CompressorIndex ) {
    BSTR _result;
    HRESULT _hr = raw_SaveCompressorSettingsToDataString(IsVideoCompressor, CompressorIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(293)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SaveCompressorSettingsToTextFile ( VARIANT_BOOL IsVideoCompressor, long CompressorIndex, _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SaveCompressorSettingsToTextFile(IsVideoCompressor, CompressorIndex, FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(294)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetAVIMuxConfig ( enum TxAVIMuxConfig AVIMuxSetting, long Value ) {
    HRESULT _hr = raw_SetAVIMuxConfig(AVIMuxSetting, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(295)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetCameraControl ( enum TxCameraControl Setting, VARIANT_BOOL SetAuto, VARIANT_BOOL SetDefault, long SetValue ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetCameraControl(Setting, SetAuto, SetDefault, SetValue, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(296)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetFrameCaptureBounds ( long LeftPosition, long TopPosition, long RightPosition, long BottomPosition ) {
    HRESULT _hr = raw_SetFrameCaptureBounds(LeftPosition, TopPosition, RightPosition, BottomPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(297)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetMultiplexerFilterByName ( _bstr_t Value ) {
    HRESULT _hr = raw_SetMultiplexerFilterByName(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(298)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetTextOverlayCustomVar ( long TextOverlaySelector, long VarIndex, _bstr_t VarText ) {
    HRESULT _hr = raw_SetTextOverlayCustomVar(TextOverlaySelector, VarIndex, VarText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(299)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetVideoCompressionDefaults ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetVideoCompressionDefaults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(300)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetVideoCompressionSettings ( long DataRate, long KeyFrameRate, long PFramesPerKeyFrame, long WindowSize, double Quality ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetVideoCompressionSettings(DataRate, KeyFrameRate, PFramesPerKeyFrame, WindowSize, Quality, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(301)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetVideoControlMode ( VARIANT_BOOL FlipHorizontal, VARIANT_BOOL FlipVertical, VARIANT_BOOL ExternalTriggerEnable, VARIANT_BOOL Trigger ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetVideoControlMode(FlipHorizontal, FlipVertical, ExternalTriggerEnable, Trigger, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(302)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetVideoQuality ( enum TxVideoQuality Setting, VARIANT_BOOL SetAuto, VARIANT_BOOL SetDefault, long SetValue ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetVideoQuality(Setting, SetAuto, SetDefault, SetValue, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(303)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetVMR9ImageAdjustmentValue ( VARIANT_BOOL MainDisplay, enum TxVMR9ImageAdjustment VMR9ControlSetting, long param3, VARIANT_BOOL FixRange ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetVMR9ImageAdjustmentValue(MainDisplay, VMR9ControlSetting, param3, FixRange, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(304)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ShowDialog ( enum TxDialog Dialog ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ShowDialog(Dialog, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(305)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::PausePreview ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_PausePreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(306)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ResetPreview ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ResetPreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(307)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ResumePreview ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ResumePreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(308)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::RecordToNewFileNow ( _bstr_t NewRecordingFileName, VARIANT_BOOL ResetStreamTime ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_RecordToNewFileNow(NewRecordingFileName, ResetStreamTime, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(309)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::RetrieveInitialXYAfterRotation ( long x, long y, long * OriginalX, long * OriginalY ) {
    HRESULT _hr = raw_RetrieveInitialXYAfterRotation(x, y, OriginalX, OriginalY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(310)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SendImageToVideoFromBitmaps ( _bstr_t ImageFilePath, long BitmapHandle, VARIANT_BOOL CanFreeBitmapHandle, VARIANT_BOOL EndOfData ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SendImageToVideoFromBitmaps(ImageFilePath, BitmapHandle, CanFreeBitmapHandle, EndOfData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(311)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetHeaderAttribute ( enum TxHeaderAttribute HeaderAttribute, _bstr_t Value ) {
    HRESULT _hr = raw_SetHeaderAttribute(HeaderAttribute, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(312)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetImageOverlayAttributes ( long LeftLocation, long TopLocation, long StretchedWidth, long StretchedHeight, VARIANT_BOOL Transparent, VARIANT_BOOL UseTransparentColor, long TransparentColorValue, VARIANT_BOOL AlphaBlend, long AlphaBlendValue ) {
    HRESULT _hr = raw_SetImageOverlayAttributes(LeftLocation, TopLocation, StretchedWidth, StretchedHeight, Transparent, UseTransparentColor, TransparentColorValue, AlphaBlend, AlphaBlendValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(313)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetImageOverlayFromImageFile ( _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetImageOverlayFromImageFile(FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(314)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetImageOverlayFromBMPFile ( _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetImageOverlayFromBMPFile(FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(315)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetImageOverlayFromJPEGFile ( _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetImageOverlayFromJPEGFile(FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(316)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetImageOverlayFromHBitmap ( long Bitmap ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetImageOverlayFromHBitmap(Bitmap, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(317)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetIPCameraSetting ( enum TxIPCameraSetting Setting, long param2 ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetIPCameraSetting(Setting, param2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(318)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetLogoFromBMPFile ( _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetLogoFromBMPFile(FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(319)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetLogoFromJPEGFile ( _bstr_t FileName ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetLogoFromJPEGFile(FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(320)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetLogoFromHBitmap ( long Bitmap ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetLogoFromHBitmap(Bitmap, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(321)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ScreenRecordingUsingCoordinates ( VARIANT_BOOL FunctionEnabled, long scLeft, long scTop, long scWidth, long scHeight ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ScreenRecordingUsingCoordinates(FunctionEnabled, scLeft, scTop, scWidth, scHeight, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(322)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SendCameraCommand ( long Pan, long Tilt, VARIANT_BOOL Relative ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SendCameraCommand(Pan, Tilt, Relative, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(323)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::PutMiscDeviceControl ( enum TxMiscDeviceControl MiscDeviceControl, long Index, long param3 ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_PutMiscDeviceControl(MiscDeviceControl, Index, param3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(324)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetWindowRecordingByHandle ( long Window_Handle ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetWindowRecordingByHandle(Window_Handle, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(325)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetWindowRecordingByName ( _bstr_t WindowName, VARIANT_BOOL ExactMatch ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetWindowRecordingByName(WindowName, ExactMatch, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(326)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetVUMeterSetting ( long ChannelIndex, enum TxVUMeterSetting VUMeterSetting, long Value ) {
    HRESULT _hr = raw_SetVUMeterSetting(ChannelIndex, VUMeterSetting, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(327)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::SetWindowTransparency ( long WndHandle, VARIANT_BOOL UseColorKey, VARIANT_BOOL UseAlpha, long AlphaValue ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_SetWindowTransparency(WndHandle, UseColorKey, UseAlpha, AlphaValue, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(328)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::StartAudioRecording ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_StartAudioRecording(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(329)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::StartAudioRendering ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_StartAudioRendering(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(330)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::StartPreview ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_StartPreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(331)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::StartRecording ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_StartRecording(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(332)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::StartReencoding ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_StartReencoding(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(333)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::Stop ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_Stop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(334)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::StopPreview ( ) {
    HRESULT _hr = raw_StopPreview();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(335)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::StopPlayer ( ) {
    HRESULT _hr = raw_StopPlayer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(336)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::StopRecording ( ) {
    HRESULT _hr = raw_StopRecording();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(337)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::StopReencoding ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_StopReencoding(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(338)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::TextOverlay_CreateCustomFont ( long fHeight, long fWidth, long fEscapement, long fOrientation, long fWeight, VARIANT_BOOL fItalic, VARIANT_BOOL fUnderline, VARIANT_BOOL fStrikeOut, long fCharSet, long fOutputPrecision, long fClipPrecision, long fQuality, long fPitchAndFamily, _bstr_t FontFacename ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_TextOverlay_CreateCustomFont(fHeight, fWidth, fEscapement, fOrientation, fWeight, fItalic, fUnderline, fStrikeOut, fCharSet, fOutputPrecision, fClipPrecision, fQuality, fPitchAndFamily, FontFacename, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(339)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ThirdPartyFilter_AddToList ( enum TxThirdPartyFilterList Location, _bstr_t GUIDString, _bstr_t OptionalDLLFilePath, _bstr_t FilterName, VARIANT_BOOL Enable, VARIANT_BOOL CanSaveFilterState ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ThirdPartyFilter_AddToList(Location, GUIDString, OptionalDLLFilePath, FilterName, Enable, CanSaveFilterState, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(340)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ThirdPartyFilter_ClearList ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ThirdPartyFilter_ClearList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(341)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ThirdPartyFilter_Enable ( enum TxThirdPartyFilterList Location, _bstr_t GUIDString, VARIANT_BOOL Enable ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ThirdPartyFilter_Enable(Location, GUIDString, Enable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(342)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ThirdPartyFilter_RemoveFromList ( enum TxThirdPartyFilterList Location, _bstr_t GUIDString ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ThirdPartyFilter_RemoveFromList(Location, GUIDString, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(343)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::ThirdPartyFilter_ShowDialog ( enum TxThirdPartyFilterList Location, _bstr_t GUIDString ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_ThirdPartyFilter_ShowDialog(Location, GUIDString, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(344)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::TVGetMinMaxChannels ( long * MinChannel, long * MaxChannel ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_TVGetMinMaxChannels(MinChannel, MaxChannel, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(345)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::TVClearFrequencyOverrides ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_TVClearFrequencyOverrides(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(346)
inline long Vidgrab_VC6::IVideoGrabberVC6::TVSetChannelFrequencyOverride ( long TVChannel, long FrequencyInHz ) {
    long _result;
    HRESULT _hr = raw_TVSetChannelFrequencyOverride(TVChannel, FrequencyInHz, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(347)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::TVStartAutoScan ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_TVStartAutoScan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(348)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::TVStartAutoScanChannels ( long MinChannel, long MaxChannel, long Interval_ms ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_TVStartAutoScanChannels(MinChannel, MaxChannel, Interval_ms, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(349)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::TVStopAutoScan ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_TVStopAutoScan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(350)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::UseNearestVideoSize ( long PreferredWidth, long PreferredHeight, VARIANT_BOOL Stretch ) {
    HRESULT _hr = raw_UseNearestVideoSize(PreferredWidth, PreferredHeight, Stretch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(351)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VDECGetHorizontalLocked ( long * plLocked ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VDECGetHorizontalLocked(plLocked, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(352)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VDECGetNumberOfLines ( long * plNumberOfLines ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VDECGetNumberOfLines(plNumberOfLines, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(353)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VDECGetOutputEnable ( long * plOutputEnable ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VDECGetOutputEnable(plOutputEnable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(354)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VDECGetVCRHorizontalLocking ( long * plVCRHorizontalLocking ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VDECGetVCRHorizontalLocking(plVCRHorizontalLocking, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(355)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VDECPutTVFormat ( long lAnalogVideoStandard ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VDECPutTVFormat(lAnalogVideoStandard, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(356)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VDECPutOutputEnable ( long lOutputEnable ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VDECPutOutputEnable(lOutputEnable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(357)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VDECPutVCRHorizontalLocking ( long lVCRHorizontalLocking ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VDECPutVCRHorizontalLocking(lVCRHorizontalLocking, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(358)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VideoFromImages_CreateSetOfBitmaps ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VideoFromImages_CreateSetOfBitmaps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(359)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoQualityValue ( enum TxVideoQuality Setting ) {
    long _result;
    HRESULT _hr = raw_VideoQualityValue(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(360)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::VideoQualityAuto ( enum TxVideoQuality Setting ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_VideoQualityAuto(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(361)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoQualityDefault ( enum TxVideoQuality Setting ) {
    long _result;
    HRESULT _hr = raw_VideoQualityDefault(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(362)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoQualityMin ( enum TxVideoQuality Setting ) {
    long _result;
    HRESULT _hr = raw_VideoQualityMin(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(363)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoQualityMax ( enum TxVideoQuality Setting ) {
    long _result;
    HRESULT _hr = raw_VideoQualityMax(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(364)
inline long Vidgrab_VC6::IVideoGrabberVC6::VideoQualityStep ( enum TxVideoQuality Setting ) {
    long _result;
    HRESULT _hr = raw_VideoQualityStep(Setting, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(365)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::WriteScriptCommand ( _bstr_t ScriptType, _bstr_t ScriptArgument ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_WriteScriptCommand(ScriptType, ScriptArgument, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(366)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::MonitorBounds ( long MonitorNumber, long * LeftBound, long * TopBound, long * RightBound, long * BottomBound ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_MonitorBounds(MonitorNumber, LeftBound, TopBound, RightBound, BottomBound, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(367)
inline enum TxAlignment Vidgrab_VC6::IVideoGrabberVC6::GetAlignment ( ) {
    enum TxAlignment _result;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(368)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAlignment ( enum TxAlignment Value ) {
    HRESULT _hr = put_Alignment(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(369)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetCaption ( ) {
    BSTR _result;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(370)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCaption ( _bstr_t Value ) {
    HRESULT _hr = put_Caption(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(371)
inline OLE_COLOR Vidgrab_VC6::IVideoGrabberVC6::GetColor ( ) {
    OLE_COLOR _result;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(372)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutColor ( OLE_COLOR Value ) {
    HRESULT _hr = put_Color(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(373)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(374)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Enabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(375)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetFullRepaint ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_FullRepaint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(376)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFullRepaint ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_FullRepaint(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(377)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetParentColor ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ParentColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(378)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutParentColor ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ParentColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(379)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVisible ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(380)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVisible ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Visible(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(381)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAdjustOverlayAspectRatio ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AdjustOverlayAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(382)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAdjustOverlayAspectRatio ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AdjustOverlayAspectRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(383)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAdjustPixelAspectRatio ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AdjustPixelAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(384)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAdjustPixelAspectRatio ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AdjustPixelAspectRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(385)
inline enum TxAero Vidgrab_VC6::IVideoGrabberVC6::GetAero ( ) {
    enum TxAero _result;
    HRESULT _hr = get_Aero(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(386)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAero ( enum TxAero Value ) {
    HRESULT _hr = put_Aero(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(387)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAnalogVideoStandard ( ) {
    long _result;
    HRESULT _hr = get_AnalogVideoStandard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(388)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAnalogVideoStandard ( long Value ) {
    HRESULT _hr = put_AnalogVideoStandard(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(389)
inline enum TxApplicationPriority Vidgrab_VC6::IVideoGrabberVC6::GetApplicationPriority ( ) {
    enum TxApplicationPriority _result;
    HRESULT _hr = get_ApplicationPriority(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(390)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutApplicationPriority ( enum TxApplicationPriority Value ) {
    HRESULT _hr = put_ApplicationPriority(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(391)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFAudioBitRate ( ) {
    long _result;
    HRESULT _hr = get_ASFAudioBitRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(392)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFAudioBitRate ( long Value ) {
    HRESULT _hr = put_ASFAudioBitRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(393)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFAudioChannels ( ) {
    long _result;
    HRESULT _hr = get_ASFAudioChannels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(394)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFAudioChannels ( long Value ) {
    HRESULT _hr = put_ASFAudioChannels(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(395)
inline enum TxASFDeinterlaceMode Vidgrab_VC6::IVideoGrabberVC6::GetASFDeinterlaceMode ( ) {
    enum TxASFDeinterlaceMode _result;
    HRESULT _hr = get_ASFDeinterlaceMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(396)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFDeinterlaceMode ( enum TxASFDeinterlaceMode Value ) {
    HRESULT _hr = put_ASFDeinterlaceMode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(397)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetASFFixedFrameRate ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ASFFixedFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(398)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFFixedFrameRate ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ASFFixedFrameRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(399)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetASFMediaServerPublishingPoint ( ) {
    BSTR _result;
    HRESULT _hr = get_ASFMediaServerPublishingPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(400)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFMediaServerPublishingPoint ( _bstr_t Value ) {
    HRESULT _hr = put_ASFMediaServerPublishingPoint(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(401)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetASFMediaServerTemplatePublishingPoint ( ) {
    BSTR _result;
    HRESULT _hr = get_ASFMediaServerTemplatePublishingPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(402)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFMediaServerTemplatePublishingPoint ( _bstr_t Value ) {
    HRESULT _hr = put_ASFMediaServerTemplatePublishingPoint(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(403)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetASFMediaServerRemovePublishingPointAfterDisconnect ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ASFMediaServerRemovePublishingPointAfterDisconnect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(404)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFMediaServerRemovePublishingPointAfterDisconnect ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ASFMediaServerRemovePublishingPointAfterDisconnect(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(405)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFNetworkPort ( ) {
    long _result;
    HRESULT _hr = get_ASFNetworkPort(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(406)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFNetworkPort ( long Value ) {
    HRESULT _hr = put_ASFNetworkPort(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(407)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFNetworkMaxUsers ( ) {
    long _result;
    HRESULT _hr = get_ASFNetworkMaxUsers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(408)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFNetworkMaxUsers ( long Value ) {
    HRESULT _hr = put_ASFNetworkMaxUsers(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(409)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFProfile ( ) {
    long _result;
    HRESULT _hr = get_ASFProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(410)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFProfile ( long Value ) {
    HRESULT _hr = put_ASFProfile(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(411)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetASFProfileFromCustomFile ( ) {
    BSTR _result;
    HRESULT _hr = get_ASFProfileFromCustomFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(412)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFProfileFromCustomFile ( _bstr_t Value ) {
    HRESULT _hr = put_ASFProfileFromCustomFile(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(413)
inline enum TxASFProfileVersion Vidgrab_VC6::IVideoGrabberVC6::GetASFProfileVersion ( ) {
    enum TxASFProfileVersion _result;
    HRESULT _hr = get_ASFProfileVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(414)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFProfileVersion ( enum TxASFProfileVersion Value ) {
    HRESULT _hr = put_ASFProfileVersion(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(415)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFVideoBitRate ( ) {
    long _result;
    HRESULT _hr = get_ASFVideoBitRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(416)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFVideoBitRate ( long Value ) {
    HRESULT _hr = put_ASFVideoBitRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(417)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetASFVideoFrameRate ( ) {
    double _result;
    HRESULT _hr = get_ASFVideoFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(418)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFVideoFrameRate ( double Value ) {
    HRESULT _hr = put_ASFVideoFrameRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(419)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFVideoHeight ( ) {
    long _result;
    HRESULT _hr = get_ASFVideoHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(420)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFVideoHeight ( long Value ) {
    HRESULT _hr = put_ASFVideoHeight(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(421)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFVideoMaxKeyFrameSpacing ( ) {
    long _result;
    HRESULT _hr = get_ASFVideoMaxKeyFrameSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(422)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFVideoMaxKeyFrameSpacing ( long Value ) {
    HRESULT _hr = put_ASFVideoMaxKeyFrameSpacing(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(423)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFVideoQuality ( ) {
    long _result;
    HRESULT _hr = get_ASFVideoQuality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(424)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFVideoQuality ( long Value ) {
    HRESULT _hr = put_ASFVideoQuality(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(425)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetASFVideoWidth ( ) {
    long _result;
    HRESULT _hr = get_ASFVideoWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(426)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutASFVideoWidth ( long Value ) {
    HRESULT _hr = put_ASFVideoWidth(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(427)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetAspectRatioToUse ( ) {
    double _result;
    HRESULT _hr = get_AspectRatioToUse(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(428)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAspectRatioToUse ( double Value ) {
    HRESULT _hr = put_AspectRatioToUse(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(429)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAssociateAudioAndVideoDevices ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AssociateAudioAndVideoDevices(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(430)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAssociateAudioAndVideoDevices ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AssociateAudioAndVideoDevices(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(431)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAVIDurationUpdated ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AVIDurationUpdated(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(432)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAVIDurationUpdated ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AVIDurationUpdated(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(433)
inline enum TxAudioChannelRenderMode Vidgrab_VC6::IVideoGrabberVC6::GetAudioChannelRenderMode ( ) {
    enum TxAudioChannelRenderMode _result;
    HRESULT _hr = get_AudioChannelRenderMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(434)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioChannelRenderMode ( enum TxAudioChannelRenderMode Value ) {
    HRESULT _hr = put_AudioChannelRenderMode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(435)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioCompressor ( ) {
    long _result;
    HRESULT _hr = get_AudioCompressor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(436)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioCompressor ( long Value ) {
    HRESULT _hr = put_AudioCompressor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(437)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioDevice ( ) {
    long _result;
    HRESULT _hr = get_AudioDevice(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(438)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioDevice ( long Value ) {
    HRESULT _hr = put_AudioDevice(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(439)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAudioDeviceRendering ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AudioDeviceRendering(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(440)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioDeviceRendering ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AudioDeviceRendering(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(441)
inline enum TxAudioFormat Vidgrab_VC6::IVideoGrabberVC6::GetAudioFormat ( ) {
    enum TxAudioFormat _result;
    HRESULT _hr = get_AudioFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(442)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioFormat ( enum TxAudioFormat Value ) {
    HRESULT _hr = put_AudioFormat(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(443)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioInput ( ) {
    long _result;
    HRESULT _hr = get_AudioInput(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(444)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioInput ( long Value ) {
    HRESULT _hr = put_AudioInput(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(445)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAudioPeakEvent ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AudioPeakEvent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(446)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioPeakEvent ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AudioPeakEvent(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(447)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAudioRecording ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AudioRecording(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(448)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioRecording ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AudioRecording(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(449)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioRenderer ( ) {
    long _result;
    HRESULT _hr = get_AudioRenderer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(450)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioRenderer ( long Value ) {
    HRESULT _hr = put_AudioRenderer(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(451)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioStreamNumber ( ) {
    long _result;
    HRESULT _hr = get_AudioStreamNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(452)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioStreamNumber ( long Value ) {
    HRESULT _hr = put_AudioStreamNumber(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(453)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAudioSyncAdjustmentEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AudioSyncAdjustmentEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(454)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioSyncAdjustmentEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AudioSyncAdjustmentEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(455)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAudioSyncAdjustment ( ) {
    long _result;
    HRESULT _hr = get_AudioSyncAdjustment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(456)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioSyncAdjustment ( long Value ) {
    HRESULT _hr = put_AudioSyncAdjustment(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(457)
inline enum TxAudioSource Vidgrab_VC6::IVideoGrabberVC6::GetAudioSource ( ) {
    enum TxAudioSource _result;
    HRESULT _hr = get_AudioSource(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(458)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAudioSource ( enum TxAudioSource Value ) {
    HRESULT _hr = put_AudioSource(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(459)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAutoConnectRelatedPins ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AutoConnectRelatedPins(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(460)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAutoConnectRelatedPins ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AutoConnectRelatedPins(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(461)
inline enum TxAutoFileName Vidgrab_VC6::IVideoGrabberVC6::GetAutoFileName ( ) {
    enum TxAutoFileName _result;
    HRESULT _hr = get_AutoFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(462)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAutoFileName ( enum TxAutoFileName Value ) {
    HRESULT _hr = put_AutoFileName(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(463)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetAutoFileNameMinDigits ( ) {
    long _result;
    HRESULT _hr = get_AutoFileNameMinDigits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(464)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAutoFileNameMinDigits ( long Value ) {
    HRESULT _hr = put_AutoFileNameMinDigits(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(465)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetAutoFilePrefix ( ) {
    BSTR _result;
    HRESULT _hr = get_AutoFilePrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(466)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAutoFilePrefix ( _bstr_t Value ) {
    HRESULT _hr = put_AutoFilePrefix(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(467)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAutoRefreshPreview ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AutoRefreshPreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(468)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAutoRefreshPreview ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AutoRefreshPreview(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(469)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAutoStartPlayer ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AutoStartPlayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(470)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAutoStartPlayer ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AutoStartPlayer(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(471)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAVIFormatOpenDML ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AVIFormatOpenDML(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(472)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAVIFormatOpenDML ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AVIFormatOpenDML(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(473)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAVIFormatOpenDMLCompatibilityIndex ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AVIFormatOpenDMLCompatibilityIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(474)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutAVIFormatOpenDMLCompatibilityIndex ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AVIFormatOpenDMLCompatibilityIndex(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(475)
inline OLE_COLOR Vidgrab_VC6::IVideoGrabberVC6::GetBackgroundColor ( ) {
    OLE_COLOR _result;
    HRESULT _hr = get_BackgroundColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(476)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutBackgroundColor ( OLE_COLOR Value ) {
    HRESULT _hr = put_BackgroundColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(477)
inline enum TxBorderStyle Vidgrab_VC6::IVideoGrabberVC6::GetBorderStyle ( ) {
    enum TxBorderStyle _result;
    HRESULT _hr = get_BorderStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(478)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutBorderStyle ( enum TxBorderStyle Value ) {
    HRESULT _hr = put_BorderStyle(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(479)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetBurstCount ( ) {
    long _result;
    HRESULT _hr = get_BurstCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(480)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutBurstCount ( long Value ) {
    HRESULT _hr = put_BurstCount(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(481)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetBurstInterval ( ) {
    long _result;
    HRESULT _hr = get_BurstInterval(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(482)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutBurstInterval ( long Value ) {
    HRESULT _hr = put_BurstInterval(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(483)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetBurstMode ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_BurstMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(484)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutBurstMode ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_BurstMode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(485)
inline enum TxFrameCaptureDest Vidgrab_VC6::IVideoGrabberVC6::GetBurstType ( ) {
    enum TxFrameCaptureDest _result;
    HRESULT _hr = get_BurstType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(486)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutBurstType ( enum TxFrameCaptureDest Value ) {
    HRESULT _hr = put_BurstType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(487)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetCameraControlSettings ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_CameraControlSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(488)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCameraControlSettings ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_CameraControlSettings(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(489)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetCaptureFileExt ( ) {
    BSTR _result;
    HRESULT _hr = get_CaptureFileExt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(490)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCaptureFileExt ( _bstr_t Value ) {
    HRESULT _hr = put_CaptureFileExt(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(491)
inline OLE_COLOR Vidgrab_VC6::IVideoGrabberVC6::GetColorKey ( ) {
    OLE_COLOR _result;
    HRESULT _hr = get_ColorKey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(492)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutColorKey ( OLE_COLOR Value ) {
    HRESULT _hr = put_ColorKey(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(493)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetColorKeyEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ColorKeyEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(494)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutColorKeyEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ColorKeyEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(495)
inline enum TxCompressionMode Vidgrab_VC6::IVideoGrabberVC6::GetCompressionMode ( ) {
    enum TxCompressionMode _result;
    HRESULT _hr = get_CompressionMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(496)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCompressionMode ( enum TxCompressionMode Value ) {
    HRESULT _hr = put_CompressionMode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(497)
inline enum TxCompressionType Vidgrab_VC6::IVideoGrabberVC6::GetCompressionType ( ) {
    enum TxCompressionType _result;
    HRESULT _hr = get_CompressionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(498)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCompressionType ( enum TxCompressionType Value ) {
    HRESULT _hr = put_CompressionType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(499)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Active ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(500)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Active ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_Active(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(501)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_AlphaBlendEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_AlphaBlendEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(502)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_AlphaBlendEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_AlphaBlendEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(503)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_AlphaBlendValue ( ) {
    long _result;
    HRESULT _hr = get_Display_AlphaBlendValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(504)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_AlphaBlendValue ( long Value ) {
    HRESULT _hr = put_Display_AlphaBlendValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(505)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_AutoSize ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_AutoSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(506)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_AutoSize ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_AutoSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(507)
inline enum TxAspectRatio Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_AspectRatio ( ) {
    enum TxAspectRatio _result;
    HRESULT _hr = get_Display_AspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(508)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_AspectRatio ( enum TxAspectRatio Value ) {
    HRESULT _hr = put_Display_AspectRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(509)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Embedded ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_Embedded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(510)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Embedded ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_Embedded(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(511)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_FullScreen ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_FullScreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(512)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_FullScreen ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_FullScreen(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(513)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Height ( ) {
    long _result;
    HRESULT _hr = get_Display_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(514)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Height ( long Value ) {
    HRESULT _hr = put_Display_Height(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(515)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Left ( ) {
    long _result;
    HRESULT _hr = get_Display_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(516)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Left ( long Value ) {
    HRESULT _hr = put_Display_Left(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(517)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Monitor ( ) {
    long _result;
    HRESULT _hr = get_Display_Monitor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(518)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Monitor ( long Value ) {
    HRESULT _hr = put_Display_Monitor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(519)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_MouseMovesWindow ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_MouseMovesWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(520)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_MouseMovesWindow ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_MouseMovesWindow(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(521)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_PanScanRatio ( ) {
    long _result;
    HRESULT _hr = get_Display_PanScanRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(522)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_PanScanRatio ( long Value ) {
    HRESULT _hr = put_Display_PanScanRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(523)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_StayOnTop ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_StayOnTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(524)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_StayOnTop ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_StayOnTop(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(525)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Top ( ) {
    long _result;
    HRESULT _hr = get_Display_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(526)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Top ( long Value ) {
    HRESULT _hr = put_Display_Top(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(527)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_TransparentColorEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_TransparentColorEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(528)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_TransparentColorEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_TransparentColorEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(529)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_TransparentColorValue ( ) {
    long _result;
    HRESULT _hr = get_Display_TransparentColorValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(530)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_TransparentColorValue ( long Value ) {
    HRESULT _hr = put_Display_TransparentColorValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(531)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_VideoPortEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_VideoPortEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(532)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_VideoPortEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_VideoPortEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(533)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Visible ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Display_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(534)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Visible ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Display_Visible(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(535)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDisplay_Width ( ) {
    long _result;
    HRESULT _hr = get_Display_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(536)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDisplay_Width ( long Value ) {
    HRESULT _hr = put_Display_Width(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(537)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDoubleBuffered ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DoubleBuffered(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(538)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDoubleBuffered ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DoubleBuffered(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(539)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDroppedFramesPollingInterval ( ) {
    long _result;
    HRESULT _hr = get_DroppedFramesPollingInterval(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(540)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDroppedFramesPollingInterval ( long Value ) {
    HRESULT _hr = put_DroppedFramesPollingInterval(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(541)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Active ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(542)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Active ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_Active(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(543)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_AlphaBlendEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_AlphaBlendEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(544)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_AlphaBlendEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_AlphaBlendEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(545)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_AlphaBlendValue ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_AlphaBlendValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(546)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_AlphaBlendValue ( long Value ) {
    HRESULT _hr = put_DualDisplay_AlphaBlendValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(547)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_TransparentColorEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_TransparentColorEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(548)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_TransparentColorEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_TransparentColorEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(549)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_TransparentColorValue ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_TransparentColorValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(550)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_TransparentColorValue ( long Value ) {
    HRESULT _hr = put_DualDisplay_TransparentColorValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(551)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_AutoSize ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_AutoSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(552)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_AutoSize ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_AutoSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(553)
inline enum TxAspectRatio Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_AspectRatio ( ) {
    enum TxAspectRatio _result;
    HRESULT _hr = get_DualDisplay_AspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(554)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_AspectRatio ( enum TxAspectRatio Value ) {
    HRESULT _hr = put_DualDisplay_AspectRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(555)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Embedded ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_Embedded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(556)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Embedded ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_Embedded(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(557)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_FullScreen ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_FullScreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(558)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_FullScreen ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_FullScreen(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(559)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Height ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(560)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Height ( long Value ) {
    HRESULT _hr = put_DualDisplay_Height(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(561)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Left ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(562)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Left ( long Value ) {
    HRESULT _hr = put_DualDisplay_Left(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(563)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Monitor ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_Monitor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(564)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Monitor ( long Value ) {
    HRESULT _hr = put_DualDisplay_Monitor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(565)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_MouseMovesWindow ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_MouseMovesWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(566)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_MouseMovesWindow ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_MouseMovesWindow(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(567)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_PanScanRatio ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_PanScanRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(568)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_PanScanRatio ( long Value ) {
    HRESULT _hr = put_DualDisplay_PanScanRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(569)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_StayOnTop ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_StayOnTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(570)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_StayOnTop ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_StayOnTop(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(571)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Top ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(572)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Top ( long Value ) {
    HRESULT _hr = put_DualDisplay_Top(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(573)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_VideoPortEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_VideoPortEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(574)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_VideoPortEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_VideoPortEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(575)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Visible ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DualDisplay_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(576)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Visible ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DualDisplay_Visible(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(577)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDualDisplay_Width ( ) {
    long _result;
    HRESULT _hr = get_DualDisplay_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(578)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDualDisplay_Width ( long Value ) {
    HRESULT _hr = put_DualDisplay_Width(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(579)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDVDateTimeEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DVDateTimeEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(580)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVDateTimeEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DVDateTimeEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(581)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDVDTitle ( ) {
    long _result;
    HRESULT _hr = get_DVDTitle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(582)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVDTitle ( long Value ) {
    HRESULT _hr = put_DVDTitle(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(583)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetDVDiscontinuityMinimumInterval ( ) {
    long _result;
    HRESULT _hr = get_DVDiscontinuityMinimumInterval(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(584)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVDiscontinuityMinimumInterval ( long Value ) {
    HRESULT _hr = put_DVDiscontinuityMinimumInterval(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(585)
inline enum TxDVVideoFormat Vidgrab_VC6::IVideoGrabberVC6::GetDVEncoder_VideoFormat ( ) {
    enum TxDVVideoFormat _result;
    HRESULT _hr = get_DVEncoder_VideoFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(586)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVEncoder_VideoFormat ( enum TxDVVideoFormat Value ) {
    HRESULT _hr = put_DVEncoder_VideoFormat(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(587)
inline enum TxDVSize Vidgrab_VC6::IVideoGrabberVC6::GetDVEncoder_VideoResolution ( ) {
    enum TxDVSize _result;
    HRESULT _hr = get_DVEncoder_VideoResolution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(588)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVEncoder_VideoResolution ( enum TxDVSize Value ) {
    HRESULT _hr = put_DVEncoder_VideoResolution(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(589)
inline enum TxDVVideoStandard Vidgrab_VC6::IVideoGrabberVC6::GetDVEncoder_VideoStandard ( ) {
    enum TxDVVideoStandard _result;
    HRESULT _hr = get_DVEncoder_VideoStandard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(590)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVEncoder_VideoStandard ( enum TxDVVideoStandard Value ) {
    HRESULT _hr = put_DVEncoder_VideoStandard(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(591)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDVRgb219 ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DVRgb219(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(592)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVRgb219 ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DVRgb219(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(593)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDVReduceFrameRate ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DVReduceFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(594)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVReduceFrameRate ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DVReduceFrameRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(595)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDVRecordingInNativeFormatSeparatesStreams ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DVRecordingInNativeFormatSeparatesStreams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(596)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVRecordingInNativeFormatSeparatesStreams ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DVRecordingInNativeFormatSeparatesStreams(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(597)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetDVTimeCodeEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_DVTimeCodeEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(598)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutDVTimeCodeEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DVTimeCodeEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(599)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetEventNotificationSynchrone ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_EventNotificationSynchrone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(600)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutEventNotificationSynchrone ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_EventNotificationSynchrone(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(601)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetCropping_Enabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Cropping_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(602)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCropping_Enabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Cropping_Enabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(603)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetCropping_Height ( ) {
    long _result;
    HRESULT _hr = get_Cropping_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(604)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCropping_Height ( long Value ) {
    HRESULT _hr = put_Cropping_Height(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(605)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetCropping_Outbounds ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Cropping_Outbounds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(606)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCropping_Outbounds ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Cropping_Outbounds(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(607)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetCropping_Width ( ) {
    long _result;
    HRESULT _hr = get_Cropping_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(608)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCropping_Width ( long Value ) {
    HRESULT _hr = put_Cropping_Width(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(609)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetCropping_X ( ) {
    long _result;
    HRESULT _hr = get_Cropping_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(610)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCropping_X ( long Value ) {
    HRESULT _hr = put_Cropping_X(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(611)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetCropping_Y ( ) {
    long _result;
    HRESULT _hr = get_Cropping_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(612)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCropping_Y ( long Value ) {
    HRESULT _hr = put_Cropping_Y(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(613)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetCropping_Zoom ( ) {
    double _result;
    HRESULT _hr = get_Cropping_Zoom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(614)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutCropping_Zoom ( double Value ) {
    HRESULT _hr = put_Cropping_Zoom(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(615)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetFixFlickerOrBlackCapture ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_FixFlickerOrBlackCapture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(616)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFixFlickerOrBlackCapture ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_FixFlickerOrBlackCapture(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(617)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetFrameCaptureWithoutOverlay ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_FrameCaptureWithoutOverlay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(618)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameCaptureWithoutOverlay ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_FrameCaptureWithoutOverlay(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(619)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetFrameCaptureHeight ( ) {
    long _result;
    HRESULT _hr = get_FrameCaptureHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(620)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameCaptureHeight ( long Value ) {
    HRESULT _hr = put_FrameCaptureHeight(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(621)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetFrameCaptureWidth ( ) {
    long _result;
    HRESULT _hr = get_FrameCaptureWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(622)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameCaptureWidth ( long Value ) {
    HRESULT _hr = put_FrameCaptureWidth(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(623)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetFrameCaptureZoomSize ( ) {
    long _result;
    HRESULT _hr = get_FrameCaptureZoomSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(624)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameCaptureZoomSize ( long Value ) {
    HRESULT _hr = put_FrameCaptureZoomSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(625)
inline enum TxFrameGrabber Vidgrab_VC6::IVideoGrabberVC6::GetFrameGrabber ( ) {
    enum TxFrameGrabber _result;
    HRESULT _hr = get_FrameGrabber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(626)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameGrabber ( enum TxFrameGrabber Value ) {
    HRESULT _hr = put_FrameGrabber(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(627)
inline enum TxFrameGrabberRGBFormat Vidgrab_VC6::IVideoGrabberVC6::GetFrameGrabberRGBFormat ( ) {
    enum TxFrameGrabberRGBFormat _result;
    HRESULT _hr = get_FrameGrabberRGBFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(628)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameGrabberRGBFormat ( enum TxFrameGrabberRGBFormat Value ) {
    HRESULT _hr = put_FrameGrabberRGBFormat(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(629)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetFrameNumberStartsFromZero ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_FrameNumberStartsFromZero(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(630)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameNumberStartsFromZero ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_FrameNumberStartsFromZero(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(631)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetFrameRate ( ) {
    double _result;
    HRESULT _hr = get_FrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(632)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutFrameRate ( double Value ) {
    HRESULT _hr = put_FrameRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(633)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_AlphaBlend ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ImageOverlay_AlphaBlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(634)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_AlphaBlend ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ImageOverlay_AlphaBlend(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(635)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_AlphaBlendValue ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_AlphaBlendValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(636)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_AlphaBlendValue ( long Value ) {
    HRESULT _hr = put_ImageOverlay_AlphaBlendValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(637)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_ChromaKey ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ImageOverlay_ChromaKey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(638)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_ChromaKey ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ImageOverlay_ChromaKey(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(639)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_ChromaKeyLeewayPercent ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_ChromaKeyLeewayPercent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(640)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_ChromaKeyLeewayPercent ( long Value ) {
    HRESULT _hr = put_ImageOverlay_ChromaKeyLeewayPercent(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(641)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_ChromaKeyRGBColor ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_ChromaKeyRGBColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(642)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_ChromaKeyRGBColor ( long Value ) {
    HRESULT _hr = put_ImageOverlay_ChromaKeyRGBColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(643)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_Height ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(644)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_Height ( long Value ) {
    HRESULT _hr = put_ImageOverlay_Height(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(645)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_LeftLocation ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_LeftLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(646)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_LeftLocation ( long Value ) {
    HRESULT _hr = put_ImageOverlay_LeftLocation(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(647)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_RotationAngle ( ) {
    double _result;
    HRESULT _hr = get_ImageOverlay_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(648)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_RotationAngle ( double Value ) {
    HRESULT _hr = put_ImageOverlay_RotationAngle(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(649)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_StretchToVideoSize ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ImageOverlay_StretchToVideoSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(650)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_StretchToVideoSize ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ImageOverlay_StretchToVideoSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(651)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_TopLocation ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_TopLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(652)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_TopLocation ( long Value ) {
    HRESULT _hr = put_ImageOverlay_TopLocation(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(653)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_Transparent ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ImageOverlay_Transparent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(654)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_Transparent ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ImageOverlay_Transparent(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(655)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_TransparentColorValue ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_TransparentColorValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(656)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_TransparentColorValue ( long Value ) {
    HRESULT _hr = put_ImageOverlay_TransparentColorValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(657)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_UseTransparentColor ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ImageOverlay_UseTransparentColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(658)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_UseTransparentColor ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ImageOverlay_UseTransparentColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(659)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlay_Width ( ) {
    long _result;
    HRESULT _hr = get_ImageOverlay_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(660)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlay_Width ( long Value ) {
    HRESULT _hr = put_ImageOverlay_Width(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(661)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetImageOverlayEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ImageOverlayEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(662)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutImageOverlayEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ImageOverlayEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(663)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetIPCameraURL ( ) {
    BSTR _result;
    HRESULT _hr = get_IPCameraURL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(664)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutIPCameraURL ( _bstr_t Value ) {
    HRESULT _hr = put_IPCameraURL(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(665)
inline enum TxJPEGPerformance Vidgrab_VC6::IVideoGrabberVC6::GetJPEGPerformance ( ) {
    enum TxJPEGPerformance _result;
    HRESULT _hr = get_JPEGPerformance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(666)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutJPEGPerformance ( enum TxJPEGPerformance Value ) {
    HRESULT _hr = put_JPEGPerformance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(667)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetJPEGProgressiveDisplay ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_JPEGProgressiveDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(668)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutJPEGProgressiveDisplay ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_JPEGProgressiveDisplay(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(669)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetJPEGQuality ( ) {
    long _result;
    HRESULT _hr = get_JPEGQuality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(670)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutJPEGQuality ( long Value ) {
    HRESULT _hr = put_JPEGQuality(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(671)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetLicenseString ( ) {
    BSTR _result;
    HRESULT _hr = get_LicenseString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(672)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutLicenseString ( _bstr_t Value ) {
    HRESULT _hr = put_LicenseString(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(673)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetLogoDisplayed ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_LogoDisplayed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(674)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutLogoDisplayed ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_LogoDisplayed(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(675)
inline enum TxLogoLayout Vidgrab_VC6::IVideoGrabberVC6::GetLogoLayout ( ) {
    enum TxLogoLayout _result;
    HRESULT _hr = get_LogoLayout(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(676)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutLogoLayout ( enum TxLogoLayout Value ) {
    HRESULT _hr = put_LogoLayout(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(677)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMixAudioSamples_CurrentSourceLevel ( ) {
    long _result;
    HRESULT _hr = get_MixAudioSamples_CurrentSourceLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(678)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMixAudioSamples_CurrentSourceLevel ( long Value ) {
    HRESULT _hr = put_MixAudioSamples_CurrentSourceLevel(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(679)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMixAudioSamples_ExternalSourceLevel ( ) {
    long _result;
    HRESULT _hr = get_MixAudioSamples_ExternalSourceLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(680)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMixAudioSamples_ExternalSourceLevel ( long Value ) {
    HRESULT _hr = put_MixAudioSamples_ExternalSourceLevel(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(681)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMixer_MosaicColumns ( ) {
    long _result;
    HRESULT _hr = get_Mixer_MosaicColumns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(682)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMixer_MosaicColumns ( long Value ) {
    HRESULT _hr = put_Mixer_MosaicColumns(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(683)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMixer_MosaicLines ( ) {
    long _result;
    HRESULT _hr = get_Mixer_MosaicLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(684)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMixer_MosaicLines ( long Value ) {
    HRESULT _hr = put_Mixer_MosaicLines(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(685)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_CompareBlue ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MotionDetector_CompareBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(686)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_CompareBlue ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MotionDetector_CompareBlue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(687)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_CompareGreen ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MotionDetector_CompareGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(688)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_CompareGreen ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MotionDetector_CompareGreen(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(689)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_GreyScale ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MotionDetector_GreyScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(690)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_GreyScale ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MotionDetector_GreyScale(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(691)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_CompareRed ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MotionDetector_CompareRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(692)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_CompareRed ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MotionDetector_CompareRed(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(693)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_Enabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MotionDetector_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(694)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_Enabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MotionDetector_Enabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(695)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_Grid ( ) {
    BSTR _result;
    HRESULT _hr = get_MotionDetector_Grid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(696)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_Grid ( _bstr_t Value ) {
    HRESULT _hr = put_MotionDetector_Grid(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(697)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_MaxDetectionsPerSecond ( ) {
    double _result;
    HRESULT _hr = get_MotionDetector_MaxDetectionsPerSecond(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(698)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_MaxDetectionsPerSecond ( double Value ) {
    HRESULT _hr = put_MotionDetector_MaxDetectionsPerSecond(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(699)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_ReduceCPULoad ( ) {
    long _result;
    HRESULT _hr = get_MotionDetector_ReduceCPULoad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(700)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_ReduceCPULoad ( long Value ) {
    HRESULT _hr = put_MotionDetector_ReduceCPULoad(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(701)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_ReduceVideoNoise ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MotionDetector_ReduceVideoNoise(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(702)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_ReduceVideoNoise ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MotionDetector_ReduceVideoNoise(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(703)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMotionDetector_Triggered ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MotionDetector_Triggered(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(704)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMotionDetector_Triggered ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MotionDetector_Triggered(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(705)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMouseWheelEventEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MouseWheelEventEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(706)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMouseWheelEventEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MouseWheelEventEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(707)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexedInputEmulation ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MultiplexedInputEmulation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(708)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMultiplexedInputEmulation ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MultiplexedInputEmulation(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(709)
inline enum TxMultiplexedRole Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexedRole ( ) {
    enum TxMultiplexedRole _result;
    HRESULT _hr = get_MultiplexedRole(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(710)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMultiplexedRole ( enum TxMultiplexedRole Value ) {
    HRESULT _hr = put_MultiplexedRole(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(711)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexedSwitchDelay ( ) {
    long _result;
    HRESULT _hr = get_MultiplexedSwitchDelay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(712)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMultiplexedSwitchDelay ( long Value ) {
    HRESULT _hr = put_MultiplexedSwitchDelay(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(713)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexedStabilizationDelay ( ) {
    long _result;
    HRESULT _hr = get_MultiplexedStabilizationDelay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(714)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMultiplexedStabilizationDelay ( long Value ) {
    HRESULT _hr = put_MultiplexedStabilizationDelay(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(715)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetMultiplexer ( ) {
    long _result;
    HRESULT _hr = get_Multiplexer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(716)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMultiplexer ( long Value ) {
    HRESULT _hr = put_Multiplexer(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(717)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetMuteAudioRendering ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_MuteAudioRendering(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(718)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutMuteAudioRendering ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MuteAudioRendering(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(719)
inline enum TxNetworkStreaming Vidgrab_VC6::IVideoGrabberVC6::GetNetworkStreaming ( ) {
    enum TxNetworkStreaming _result;
    HRESULT _hr = get_NetworkStreaming(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(720)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutNetworkStreaming ( enum TxNetworkStreaming Value ) {
    HRESULT _hr = put_NetworkStreaming(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(721)
inline enum TxNetworkStreamingType Vidgrab_VC6::IVideoGrabberVC6::GetNetworkStreamingType ( ) {
    enum TxNetworkStreamingType _result;
    HRESULT _hr = get_NetworkStreamingType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(722)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutNetworkStreamingType ( enum TxNetworkStreamingType Value ) {
    HRESULT _hr = put_NetworkStreamingType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(723)
inline enum TxNotificationMethod Vidgrab_VC6::IVideoGrabberVC6::GetNotificationMethod ( ) {
    enum TxNotificationMethod _result;
    HRESULT _hr = get_NotificationMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(724)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutNotificationMethod ( enum TxNotificationMethod Value ) {
    HRESULT _hr = put_NotificationMethod(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(725)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetNotificationSleepTime ( ) {
    long _result;
    HRESULT _hr = get_NotificationSleepTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(726)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutNotificationSleepTime ( long Value ) {
    HRESULT _hr = put_NotificationSleepTime(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(727)
inline enum TxThreadPriority Vidgrab_VC6::IVideoGrabberVC6::GetNotificationPriority ( ) {
    enum TxThreadPriority _result;
    HRESULT _hr = get_NotificationPriority(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(728)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutNotificationPriority ( enum TxThreadPriority Value ) {
    HRESULT _hr = put_NotificationPriority(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(729)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetOverlayAfterTransform ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_OverlayAfterTransform(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(730)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutOverlayAfterTransform ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_OverlayAfterTransform(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(731)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetOverlayEventCallbackAllowed ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_OverlayEventCallbackAllowed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(732)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutOverlayEventCallbackAllowed ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_OverlayEventCallbackAllowed(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(733)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetPlayerAudioRendering ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_PlayerAudioRendering(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(734)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerAudioRendering ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_PlayerAudioRendering(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(735)
inline enum TxDVSize Vidgrab_VC6::IVideoGrabberVC6::GetPlayerDVSize ( ) {
    enum TxDVSize _result;
    HRESULT _hr = get_PlayerDVSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(736)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerDVSize ( enum TxDVSize Value ) {
    HRESULT _hr = put_PlayerDVSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(737)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetPlayerFastSeekSpeedRatio ( ) {
    long _result;
    HRESULT _hr = get_PlayerFastSeekSpeedRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(738)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerFastSeekSpeedRatio ( long Value ) {
    HRESULT _hr = put_PlayerFastSeekSpeedRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(739)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetPlayerFileName ( ) {
    BSTR _result;
    HRESULT _hr = get_PlayerFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(740)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerFileName ( _bstr_t Value ) {
    HRESULT _hr = put_PlayerFileName(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(741)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetPlayerForcedCodec ( ) {
    BSTR _result;
    HRESULT _hr = get_PlayerForcedCodec(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(742)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerForcedCodec ( _bstr_t Value ) {
    HRESULT _hr = put_PlayerForcedCodec(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(743)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetPlayerRefreshPausedDisplay ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_PlayerRefreshPausedDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(744)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerRefreshPausedDisplay ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_PlayerRefreshPausedDisplay(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(745)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPlayerRefreshPausedDisplayFrameRate ( ) {
    double _result;
    HRESULT _hr = get_PlayerRefreshPausedDisplayFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(746)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerRefreshPausedDisplayFrameRate ( double Value ) {
    HRESULT _hr = put_PlayerRefreshPausedDisplayFrameRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(747)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetPlayerSpeedRatio ( ) {
    double _result;
    HRESULT _hr = get_PlayerSpeedRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(748)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerSpeedRatio ( double Value ) {
    HRESULT _hr = put_PlayerSpeedRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(749)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetPlayerTrackBarSynchrone ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_PlayerTrackBarSynchrone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(750)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPlayerTrackBarSynchrone ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_PlayerTrackBarSynchrone(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(751)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetPreallocCapFileCopiedAfterRecording ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_PreallocCapFileCopiedAfterRecording(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(752)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPreallocCapFileCopiedAfterRecording ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_PreallocCapFileCopiedAfterRecording(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(753)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetPreallocCapFileEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_PreallocCapFileEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(754)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPreallocCapFileEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_PreallocCapFileEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(755)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetPreallocCapFileName ( ) {
    BSTR _result;
    HRESULT _hr = get_PreallocCapFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(756)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPreallocCapFileName ( _bstr_t Value ) {
    HRESULT _hr = put_PreallocCapFileName(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(757)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetPreallocCapFileSizeInMB ( ) {
    long _result;
    HRESULT _hr = get_PreallocCapFileSizeInMB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(758)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPreallocCapFileSizeInMB ( long Value ) {
    HRESULT _hr = put_PreallocCapFileSizeInMB(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(759)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetPreviewZoomSize ( ) {
    long _result;
    HRESULT _hr = get_PreviewZoomSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(760)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutPreviewZoomSize ( long Value ) {
    HRESULT _hr = put_PreviewZoomSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(761)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRecordingAudioBitRate ( ) {
    long _result;
    HRESULT _hr = get_RecordingAudioBitRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(762)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingAudioBitRate ( long Value ) {
    HRESULT _hr = put_RecordingAudioBitRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(763)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRecordingVideoBitRate ( ) {
    long _result;
    HRESULT _hr = get_RecordingVideoBitRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(764)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingVideoBitRate ( long Value ) {
    HRESULT _hr = put_RecordingVideoBitRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(765)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetRecordingFileName ( ) {
    BSTR _result;
    HRESULT _hr = get_RecordingFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(766)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingFileName ( _bstr_t Value ) {
    HRESULT _hr = put_RecordingFileName(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(767)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetRecordingInNativeFormat ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_RecordingInNativeFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(768)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingInNativeFormat ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_RecordingInNativeFormat(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(769)
inline enum TxRecordingMethod Vidgrab_VC6::IVideoGrabberVC6::GetRecordingMethod ( ) {
    enum TxRecordingMethod _result;
    HRESULT _hr = get_RecordingMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(770)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingMethod ( enum TxRecordingMethod Value ) {
    HRESULT _hr = put_RecordingMethod(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(771)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetRecordingPauseCreatesNewFile ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_RecordingPauseCreatesNewFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(772)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingPauseCreatesNewFile ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_RecordingPauseCreatesNewFile(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(773)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetRecordingOnMotion_Enabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_RecordingOnMotion_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(774)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingOnMotion_Enabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_RecordingOnMotion_Enabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(775)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetRecordingOnMotion_MotionThreshold ( ) {
    double _result;
    HRESULT _hr = get_RecordingOnMotion_MotionThreshold(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(776)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingOnMotion_MotionThreshold ( double Value ) {
    HRESULT _hr = put_RecordingOnMotion_MotionThreshold(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(777)
inline enum TxRecordingTimer Vidgrab_VC6::IVideoGrabberVC6::GetRecordingTimer ( ) {
    enum TxRecordingTimer _result;
    HRESULT _hr = get_RecordingTimer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(778)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingTimer ( enum TxRecordingTimer Value ) {
    HRESULT _hr = put_RecordingTimer(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(779)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRecordingTimerInterval ( ) {
    long _result;
    HRESULT _hr = get_RecordingTimerInterval(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(780)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingTimerInterval ( long Value ) {
    HRESULT _hr = put_RecordingTimerInterval(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(781)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetRecordingOnMotion_NoMotionPauseDelayMs ( ) {
    long _result;
    HRESULT _hr = get_RecordingOnMotion_NoMotionPauseDelayMs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(782)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingOnMotion_NoMotionPauseDelayMs ( long Value ) {
    HRESULT _hr = put_RecordingOnMotion_NoMotionPauseDelayMs(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(783)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_NewVideoClip ( ) {
    BSTR _result;
    HRESULT _hr = get_Reencoding_NewVideoClip(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(784)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_NewVideoClip ( _bstr_t Value ) {
    HRESULT _hr = put_Reencoding_NewVideoClip(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(785)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_SourceVideoClip ( ) {
    BSTR _result;
    HRESULT _hr = get_Reencoding_SourceVideoClip(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(786)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_SourceVideoClip ( _bstr_t Value ) {
    HRESULT _hr = put_Reencoding_SourceVideoClip(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(787)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_StartTime ( ) {
    double _result;
    HRESULT _hr = get_Reencoding_StartTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(788)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_StartTime ( double Value ) {
    HRESULT _hr = put_Reencoding_StartTime(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(789)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_StartFrame ( ) {
    double _result;
    HRESULT _hr = get_Reencoding_StartFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(790)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_StartFrame ( double Value ) {
    HRESULT _hr = put_Reencoding_StartFrame(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(791)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_StopTime ( ) {
    double _result;
    HRESULT _hr = get_Reencoding_StopTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(792)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_StopTime ( double Value ) {
    HRESULT _hr = put_Reencoding_StopTime(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(793)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_StopFrame ( ) {
    double _result;
    HRESULT _hr = get_Reencoding_StopFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(794)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_StopFrame ( double Value ) {
    HRESULT _hr = put_Reencoding_StopFrame(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(795)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_IncludeAudioStream ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Reencoding_IncludeAudioStream(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(796)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_IncludeAudioStream ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Reencoding_IncludeAudioStream(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(797)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_IncludeVideoStream ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Reencoding_IncludeVideoStream(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(798)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_IncludeVideoStream ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Reencoding_IncludeVideoStream(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(799)
inline enum TxRecordingMethod Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_Method ( ) {
    enum TxRecordingMethod _result;
    HRESULT _hr = get_Reencoding_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(800)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_Method ( enum TxRecordingMethod Value ) {
    HRESULT _hr = put_Reencoding_Method(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(801)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_UseAudioCompressor ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Reencoding_UseAudioCompressor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(802)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_UseAudioCompressor ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Reencoding_UseAudioCompressor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(803)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_UseFrameGrabber ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Reencoding_UseFrameGrabber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(804)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_UseFrameGrabber ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Reencoding_UseFrameGrabber(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(805)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_UseVideoCompressor ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Reencoding_UseVideoCompressor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(806)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_UseVideoCompressor ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Reencoding_UseVideoCompressor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(807)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetReencoding_WMVOutput ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Reencoding_WMVOutput(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(808)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutReencoding_WMVOutput ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Reencoding_WMVOutput(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(809)
inline enum TxRawSampleCaptureLocation Vidgrab_VC6::IVideoGrabberVC6::GetRawSampleCaptureLocation ( ) {
    enum TxRawSampleCaptureLocation _result;
    HRESULT _hr = get_RawSampleCaptureLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(810)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRawSampleCaptureLocation ( enum TxRawSampleCaptureLocation Value ) {
    HRESULT _hr = put_RawSampleCaptureLocation(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(811)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetRawVideoSampleCapture ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_RawVideoSampleCapture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(812)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRawVideoSampleCapture ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_RawVideoSampleCapture(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(813)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetRawAudioSampleCapture ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_RawAudioSampleCapture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(814)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRawAudioSampleCapture ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_RawAudioSampleCapture(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(815)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetRawCaptureAsyncEvent ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_RawCaptureAsyncEvent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(816)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRawCaptureAsyncEvent ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_RawCaptureAsyncEvent(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(817)
inline enum TxRecordingSize Vidgrab_VC6::IVideoGrabberVC6::GetRecordingSize ( ) {
    enum TxRecordingSize _result;
    HRESULT _hr = get_RecordingSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(818)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutRecordingSize ( enum TxRecordingSize Value ) {
    HRESULT _hr = put_RecordingSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(819)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetScreenRecordingMonitor ( ) {
    long _result;
    HRESULT _hr = get_ScreenRecordingMonitor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(820)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutScreenRecordingMonitor ( long Value ) {
    HRESULT _hr = put_ScreenRecordingMonitor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(821)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetScreenRecordingNonVisibleWindows ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ScreenRecordingNonVisibleWindows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(822)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutScreenRecordingNonVisibleWindows ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ScreenRecordingNonVisibleWindows(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(823)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetScreenRecordingThroughClipboard ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ScreenRecordingThroughClipboard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(824)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutScreenRecordingThroughClipboard ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ScreenRecordingThroughClipboard(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(825)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetScreenRecordingWithCursor ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ScreenRecordingWithCursor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(826)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutScreenRecordingWithCursor ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ScreenRecordingWithCursor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(827)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetShapeOverlayEnabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ShapeOverlayEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(828)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutShapeOverlayEnabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ShapeOverlayEnabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(829)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetSpeakerControl ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_SpeakerControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(830)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutSpeakerControl ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_SpeakerControl(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(831)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetStoragePath ( ) {
    BSTR _result;
    HRESULT _hr = get_StoragePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(832)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutStoragePath ( _bstr_t Value ) {
    HRESULT _hr = put_StoragePath(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(833)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetStoreDeviceSettingsInRegistry ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_StoreDeviceSettingsInRegistry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(834)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutStoreDeviceSettingsInRegistry ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_StoreDeviceSettingsInRegistry(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(835)
inline enum TxSynchronizationRole Vidgrab_VC6::IVideoGrabberVC6::GetSynchronizationRole ( ) {
    enum TxSynchronizationRole _result;
    HRESULT _hr = get_SynchronizationRole(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(836)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutSynchronizationRole ( enum TxSynchronizationRole Value ) {
    HRESULT _hr = put_SynchronizationRole(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(837)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetSynchronized ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_Synchronized(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(838)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutSynchronized ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Synchronized(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(839)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetSyncCommands ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_SyncCommands(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(840)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutSyncCommands ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_SyncCommands(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(841)
inline enum TxSyncPreview Vidgrab_VC6::IVideoGrabberVC6::GetSyncPreview ( ) {
    enum TxSyncPreview _result;
    HRESULT _hr = get_SyncPreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(842)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutSyncPreview ( enum TxSyncPreview Value ) {
    HRESULT _hr = put_SyncPreview(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(843)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Enabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_TextOverlay_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(844)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_Enabled ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_TextOverlay_Enabled(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(845)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Left ( ) {
    long _result;
    HRESULT _hr = get_TextOverlay_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(846)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_Left ( long Value ) {
    HRESULT _hr = put_TextOverlay_Left(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(847)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Top ( ) {
    long _result;
    HRESULT _hr = get_TextOverlay_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(848)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_Top ( long Value ) {
    HRESULT _hr = put_TextOverlay_Top(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(849)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Right ( ) {
    long _result;
    HRESULT _hr = get_TextOverlay_Right(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(850)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_Right ( long Value ) {
    HRESULT _hr = put_TextOverlay_Right(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(851)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_ScrollingSpeed ( ) {
    long _result;
    HRESULT _hr = get_TextOverlay_ScrollingSpeed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(852)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_ScrollingSpeed ( long Value ) {
    HRESULT _hr = put_TextOverlay_ScrollingSpeed(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(853)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Shadow ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_TextOverlay_Shadow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(854)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_Shadow ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_TextOverlay_Shadow(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(855)
inline OLE_COLOR Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_ShadowColor ( ) {
    OLE_COLOR _result;
    HRESULT _hr = get_TextOverlay_ShadowColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(856)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_ShadowColor ( OLE_COLOR Value ) {
    HRESULT _hr = put_TextOverlay_ShadowColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(857)
inline enum TxCardinalDirection Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_ShadowDirection ( ) {
    enum TxCardinalDirection _result;
    HRESULT _hr = get_TextOverlay_ShadowDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(858)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_ShadowDirection ( enum TxCardinalDirection Value ) {
    HRESULT _hr = put_TextOverlay_ShadowDirection(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(859)
inline OLE_COLOR Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_BkColor ( ) {
    OLE_COLOR _result;
    HRESULT _hr = get_TextOverlay_BkColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(860)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_BkColor ( OLE_COLOR Value ) {
    HRESULT _hr = put_TextOverlay_BkColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(861)
inline enum TxTextOverlayAlign Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Align ( ) {
    enum TxTextOverlayAlign _result;
    HRESULT _hr = get_TextOverlay_Align(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(862)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_Align ( enum TxTextOverlayAlign Value ) {
    HRESULT _hr = put_TextOverlay_Align(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(863)
inline OLE_COLOR Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_FontColor ( ) {
    OLE_COLOR _result;
    HRESULT _hr = get_TextOverlay_FontColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(864)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_FontColor ( OLE_COLOR Value ) {
    HRESULT _hr = put_TextOverlay_FontColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(865)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_String ( ) {
    BSTR _result;
    HRESULT _hr = get_TextOverlay_String(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(866)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_String ( _bstr_t Value ) {
    HRESULT _hr = put_TextOverlay_String(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(867)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetTextOverlay_Transparent ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_TextOverlay_Transparent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(868)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTextOverlay_Transparent ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_TextOverlay_Transparent(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(869)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetThirdPartyDeinterlacer ( ) {
    BSTR _result;
    HRESULT _hr = get_ThirdPartyDeinterlacer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(870)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutThirdPartyDeinterlacer ( _bstr_t Value ) {
    HRESULT _hr = put_ThirdPartyDeinterlacer(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(871)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetTranslateMouseCoordinates ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_TranslateMouseCoordinates(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(872)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTranslateMouseCoordinates ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_TranslateMouseCoordinates(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(873)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetTVUseFrequencyOverrides ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_TVUseFrequencyOverrides(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(874)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTVUseFrequencyOverrides ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_TVUseFrequencyOverrides(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(875)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetTunerFrequency ( ) {
    long _result;
    HRESULT _hr = get_TunerFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(876)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutTunerFrequency ( long Value ) {
    HRESULT _hr = put_TunerFrequency(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(877)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetUseClock ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_UseClock(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(878)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutUseClock ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_UseClock(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(879)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVersion ( ) {
    BSTR _result;
    HRESULT _hr = get_Version(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(880)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVersion ( _bstr_t Value ) {
    HRESULT _hr = put_Version(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(881)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoDevice ( ) {
    long _result;
    HRESULT _hr = get_VideoDevice(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(882)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoDevice ( long Value ) {
    HRESULT _hr = put_VideoDevice(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(883)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompression_DataRate ( ) {
    long _result;
    HRESULT _hr = get_VideoCompression_DataRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(884)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoCompression_DataRate ( long Value ) {
    HRESULT _hr = put_VideoCompression_DataRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(885)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompression_KeyFrameRate ( ) {
    long _result;
    HRESULT _hr = get_VideoCompression_KeyFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(886)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoCompression_KeyFrameRate ( long Value ) {
    HRESULT _hr = put_VideoCompression_KeyFrameRate(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(887)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompression_PFramesPerKeyFrame ( ) {
    long _result;
    HRESULT _hr = get_VideoCompression_PFramesPerKeyFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(888)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoCompression_PFramesPerKeyFrame ( long Value ) {
    HRESULT _hr = put_VideoCompression_PFramesPerKeyFrame(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(889)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompression_Quality ( ) {
    double _result;
    HRESULT _hr = get_VideoCompression_Quality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(890)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoCompression_Quality ( double Value ) {
    HRESULT _hr = put_VideoCompression_Quality(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(891)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompression_WindowSize ( ) {
    long _result;
    HRESULT _hr = get_VideoCompression_WindowSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(892)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoCompression_WindowSize ( long Value ) {
    HRESULT _hr = put_VideoCompression_WindowSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(893)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoCompressor ( ) {
    long _result;
    HRESULT _hr = get_VideoCompressor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(894)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoCompressor ( long Value ) {
    HRESULT _hr = put_VideoCompressor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(895)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoControlSettings ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoControlSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(896)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoControlSettings ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoControlSettings(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(897)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoFormat ( ) {
    long _result;
    HRESULT _hr = get_VideoFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(898)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoFormat ( long Value ) {
    HRESULT _hr = put_VideoFormat(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(899)
inline enum TxFileSort Vidgrab_VC6::IVideoGrabberVC6::GetVideoFromImages_BitmapsSortedBy ( ) {
    enum TxFileSort _result;
    HRESULT _hr = get_VideoFromImages_BitmapsSortedBy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(900)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoFromImages_BitmapsSortedBy ( enum TxFileSort Value ) {
    HRESULT _hr = put_VideoFromImages_BitmapsSortedBy(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(901)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoFromImages_RepeatIndefinitely ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoFromImages_RepeatIndefinitely(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(902)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoFromImages_RepeatIndefinitely ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoFromImages_RepeatIndefinitely(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(903)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoFromImages_SourceDirectory ( ) {
    BSTR _result;
    HRESULT _hr = get_VideoFromImages_SourceDirectory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(904)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoFromImages_SourceDirectory ( _bstr_t Value ) {
    HRESULT _hr = put_VideoFromImages_SourceDirectory(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(905)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoFromImages_TemporaryFile ( ) {
    BSTR _result;
    HRESULT _hr = get_VideoFromImages_TemporaryFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(906)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoFromImages_TemporaryFile ( _bstr_t Value ) {
    HRESULT _hr = put_VideoFromImages_TemporaryFile(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(907)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoInput ( ) {
    long _result;
    HRESULT _hr = get_VideoInput(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(908)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoInput ( long Value ) {
    HRESULT _hr = put_VideoInput(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(909)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_Brightness ( ) {
    long _result;
    HRESULT _hr = get_VideoProcessing_Brightness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(910)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_Brightness ( long Value ) {
    HRESULT _hr = put_VideoProcessing_Brightness(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(911)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_Contrast ( ) {
    long _result;
    HRESULT _hr = get_VideoProcessing_Contrast(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(912)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_Contrast ( long Value ) {
    HRESULT _hr = put_VideoProcessing_Contrast(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(913)
inline enum TxVideoDeinterlacing Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_Deinterlacing ( ) {
    enum TxVideoDeinterlacing _result;
    HRESULT _hr = get_VideoProcessing_Deinterlacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(914)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_Deinterlacing ( enum TxVideoDeinterlacing Value ) {
    HRESULT _hr = put_VideoProcessing_Deinterlacing(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(915)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_FlipHorizontal ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoProcessing_FlipHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(916)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_FlipHorizontal ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoProcessing_FlipHorizontal(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(917)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_FlipVertical ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoProcessing_FlipVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(918)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_FlipVertical ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoProcessing_FlipVertical(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(919)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_GrayScale ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoProcessing_GrayScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(920)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_GrayScale ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoProcessing_GrayScale(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(921)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_Hue ( ) {
    long _result;
    HRESULT _hr = get_VideoProcessing_Hue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(922)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_Hue ( long Value ) {
    HRESULT _hr = put_VideoProcessing_Hue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(923)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_InvertColors ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoProcessing_InvertColors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(924)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_InvertColors ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoProcessing_InvertColors(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(925)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_Pixellization ( ) {
    long _result;
    HRESULT _hr = get_VideoProcessing_Pixellization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(926)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_Pixellization ( long Value ) {
    HRESULT _hr = put_VideoProcessing_Pixellization(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(927)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_Saturation ( ) {
    long _result;
    HRESULT _hr = get_VideoProcessing_Saturation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(928)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_Saturation ( long Value ) {
    HRESULT _hr = put_VideoProcessing_Saturation(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(929)
inline enum TxVideoRotation Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_Rotation ( ) {
    enum TxVideoRotation _result;
    HRESULT _hr = get_VideoProcessing_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(930)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_Rotation ( enum TxVideoRotation Value ) {
    HRESULT _hr = put_VideoProcessing_Rotation(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(931)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetVideoProcessing_RotationCustomAngle ( ) {
    double _result;
    HRESULT _hr = get_VideoProcessing_RotationCustomAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(932)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoProcessing_RotationCustomAngle ( double Value ) {
    HRESULT _hr = put_VideoProcessing_RotationCustomAngle(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(933)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoQualitySettings ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoQualitySettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(934)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoQualitySettings ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoQualitySettings(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(935)
inline enum TxVideoRenderer Vidgrab_VC6::IVideoGrabberVC6::GetVideoRenderer ( ) {
    enum TxVideoRenderer _result;
    HRESULT _hr = get_VideoRenderer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(936)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoRenderer ( enum TxVideoRenderer Value ) {
    HRESULT _hr = put_VideoRenderer(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(937)
inline enum TxVideoRendererExternal Vidgrab_VC6::IVideoGrabberVC6::GetVideoRendererExternal ( ) {
    enum TxVideoRendererExternal _result;
    HRESULT _hr = get_VideoRendererExternal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(938)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoRendererExternal ( enum TxVideoRendererExternal Value ) {
    HRESULT _hr = put_VideoRendererExternal(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(939)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoRendererExternalIndex ( ) {
    long _result;
    HRESULT _hr = get_VideoRendererExternalIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(940)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoRendererExternalIndex ( long Value ) {
    HRESULT _hr = put_VideoRendererExternalIndex(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(941)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoSize ( ) {
    long _result;
    HRESULT _hr = get_VideoSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(942)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoSize ( long Value ) {
    HRESULT _hr = put_VideoSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(943)
inline enum TxVideoSource Vidgrab_VC6::IVideoGrabberVC6::GetVideoSource ( ) {
    enum TxVideoSource _result;
    HRESULT _hr = get_VideoSource(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(944)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoSource ( enum TxVideoSource Value ) {
    HRESULT _hr = put_VideoSource(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(945)
inline _bstr_t Vidgrab_VC6::IVideoGrabberVC6::GetVideoSource_FileOrURL ( ) {
    BSTR _result;
    HRESULT _hr = get_VideoSource_FileOrURL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(946)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoSource_FileOrURL ( _bstr_t Value ) {
    HRESULT _hr = put_VideoSource_FileOrURL(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(947)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetVideoSource_FileOrURL_StartTime ( ) {
    double _result;
    HRESULT _hr = get_VideoSource_FileOrURL_StartTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(948)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoSource_FileOrURL_StartTime ( double Value ) {
    HRESULT _hr = put_VideoSource_FileOrURL_StartTime(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(949)
inline double Vidgrab_VC6::IVideoGrabberVC6::GetVideoSource_FileOrURL_StopTime ( ) {
    double _result;
    HRESULT _hr = get_VideoSource_FileOrURL_StopTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(950)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoSource_FileOrURL_StopTime ( double Value ) {
    HRESULT _hr = put_VideoSource_FileOrURL_StopTime(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(951)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVideoSubtype ( ) {
    long _result;
    HRESULT _hr = get_VideoSubtype(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(952)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoSubtype ( long Value ) {
    HRESULT _hr = put_VideoSubtype(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(953)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetVideoVisibleWhenStopped ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_VideoVisibleWhenStopped(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(954)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVideoVisibleWhenStopped ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VideoVisibleWhenStopped(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(955)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVirtualVideoStreamControl ( ) {
    long _result;
    HRESULT _hr = get_VirtualVideoStreamControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(956)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVirtualVideoStreamControl ( long Value ) {
    HRESULT _hr = put_VirtualVideoStreamControl(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(957)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVirtualAudioStreamControl ( ) {
    long _result;
    HRESULT _hr = get_VirtualAudioStreamControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(958)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVirtualAudioStreamControl ( long Value ) {
    HRESULT _hr = put_VirtualAudioStreamControl(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(959)
inline enum TxVuMeter Vidgrab_VC6::IVideoGrabberVC6::GetVuMeter ( ) {
    enum TxVuMeter _result;
    HRESULT _hr = get_VuMeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(960)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutVuMeter ( enum TxVuMeter Value ) {
    HRESULT _hr = put_VuMeter(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(961)
inline enum TxWebcamStillCaptureButton Vidgrab_VC6::IVideoGrabberVC6::GetWebcamStillCaptureButton ( ) {
    enum TxWebcamStillCaptureButton _result;
    HRESULT _hr = get_WebcamStillCaptureButton(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(962)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutWebcamStillCaptureButton ( enum TxWebcamStillCaptureButton Value ) {
    HRESULT _hr = put_WebcamStillCaptureButton(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(963)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetZoomCoeff ( ) {
    long _result;
    HRESULT _hr = get_ZoomCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(964)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutZoomCoeff ( long Value ) {
    HRESULT _hr = put_ZoomCoeff(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(965)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetZoomXCenter ( ) {
    long _result;
    HRESULT _hr = get_ZoomXCenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(966)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutZoomXCenter ( long Value ) {
    HRESULT _hr = put_ZoomXCenter(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(967)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetZoomYCenter ( ) {
    long _result;
    HRESULT _hr = get_ZoomYCenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(968)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutZoomYCenter ( long Value ) {
    HRESULT _hr = put_ZoomYCenter(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(969)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetParentBackground ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_ParentBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(970)
inline void Vidgrab_VC6::IVideoGrabberVC6::PutParentBackground ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ParentBackground(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(971)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::GetAlignDisabled ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = get_AlignDisabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(972)
inline long Vidgrab_VC6::IVideoGrabberVC6::GetVisibleDockClientCount ( ) {
    long _result;
    HRESULT _hr = get_VisibleDockClientCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(973)
inline long Vidgrab_VC6::IVideoGrabberVC6::DrawTextBiDiModeFlagsReadingOnly ( ) {
    long _result;
    HRESULT _hr = raw_DrawTextBiDiModeFlagsReadingOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(974)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::InitiateAction ( ) {
    HRESULT _hr = raw_InitiateAction();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(975)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::IsRightToLeft ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_IsRightToLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(976)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::UseRightToLeftReading ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_UseRightToLeftReading(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(977)
inline VARIANT_BOOL Vidgrab_VC6::IVideoGrabberVC6::UseRightToLeftScrollBar ( ) {
    VARIANT_BOOL _result;
    HRESULT _hr = raw_UseRightToLeftScrollBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(978)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::SetSubComponent ( VARIANT_BOOL IsSubComponent ) {
    HRESULT _hr = raw_SetSubComponent(IsSubComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(979)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6::AboutBox ( ) {
    HRESULT _hr = raw_AboutBox();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface IVideoGrabberVC6Events wrapper method implementations
//

#pragma implementation_key(980)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnResize ( ) {
    return _com_dispatch_method(this, 0xc9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(981)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnCanResize ( long * NewWidth, long * NewHeight, VARIANT_BOOL * Resize ) {
    return _com_dispatch_method(this, 0xca, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x400b", NewWidth, NewHeight, Resize);
}

#pragma implementation_key(982)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnConstrainedResize ( long * MinWidth, long * MinHeight, long * MaxWidth, long * MaxHeight ) {
    return _com_dispatch_method(this, 0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x4003\x4003", MinWidth, MinHeight, MaxWidth, MaxHeight);
}

#pragma implementation_key(983)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnAVIDurationUpdated ( _bstr_t FileName, long Frames, double * FrameRate, double * Duration ) {
    return _com_dispatch_method(this, 0xcc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x4005\x4005", (BSTR)FileName, Frames, FrameRate, Duration);
}

#pragma implementation_key(984)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnAudioDeviceSelected ( ) {
    return _com_dispatch_method(this, 0xcd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(985)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnAudioPeak ( double Left_Percent, double Left_DB, double Right_Percent, double Right_DB ) {
    return _com_dispatch_method(this, 0xce, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", Left_Percent, Left_DB, Right_Percent, Right_DB);
}

#pragma implementation_key(986)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnBacktimedFramesCountReached ( ) {
    return _com_dispatch_method(this, 0xcf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(987)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnBitmapsLoadingProgress ( long Percent, double Position, double Duration, _bstr_t Comment ) {
    return _com_dispatch_method(this, 0xd0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0008", Percent, Position, Duration, (BSTR)Comment);
}

#pragma implementation_key(988)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnClick ( ) {
    return _com_dispatch_method(this, 0xd1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(989)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnDblClick ( ) {
    return _com_dispatch_method(this, 0xd2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(990)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnClientConnection ( VARIANT_BOOL Connected, _bstr_t ClientInfo ) {
    return _com_dispatch_method(this, 0xd3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0008", Connected, (BSTR)ClientInfo);
}

#pragma implementation_key(991)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnColorKeyChange ( OLE_COLOR ColorKey ) {
    return _com_dispatch_method(this, 0xd4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ColorKey);
}

#pragma implementation_key(992)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnCopyPreallocDataCompleted ( _bstr_t SourceFile, _bstr_t DestFile, VARIANT_BOOL Success ) {
    return _com_dispatch_method(this, 0xd5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b", (BSTR)SourceFile, (BSTR)DestFile, Success);
}

#pragma implementation_key(993)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnCopyPreallocDataProgress ( long Percent, double Position, double Duration ) {
    return _com_dispatch_method(this, 0xd6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Percent, Position, Duration);
}

#pragma implementation_key(994)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnCopyPreallocDataStarted ( _bstr_t SourceFile, _bstr_t DestFile ) {
    return _com_dispatch_method(this, 0xd7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)SourceFile, (BSTR)DestFile);
}

#pragma implementation_key(995)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnCreatePreallocFileCompleted ( _bstr_t FileName, VARIANT_BOOL Success ) {
    return _com_dispatch_method(this, 0xd8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b", (BSTR)FileName, Success);
}

#pragma implementation_key(996)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnCreatePreallocFileProgress ( long Percent, double Position, double Duration ) {
    return _com_dispatch_method(this, 0xd9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Percent, Position, Duration);
}

#pragma implementation_key(997)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnCreatePreallocFileStarted ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0xda, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(998)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnDeviceArrivalOrRemoval ( VARIANT_BOOL IsDeviceArrival, VARIANT_BOOL IsVideoDevice, _bstr_t DeviceName, long DeviceIndex ) {
    return _com_dispatch_method(this, 0xdb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x000b\x0008\x0003", IsDeviceArrival, IsVideoDevice, (BSTR)DeviceName, DeviceIndex);
}

#pragma implementation_key(999)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnDeviceLost ( ) {
    return _com_dispatch_method(this, 0xdc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1000)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnDirectNetworkStreamingHostUrl ( _bstr_t HostUrl, _bstr_t HostName, long HostPort ) {
    return _com_dispatch_method(this, 0xdd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0003", (BSTR)HostUrl, (BSTR)HostName, HostPort);
}

#pragma implementation_key(1001)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnDiskFull ( ) {
    return _com_dispatch_method(this, 0xde, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1002)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnDVDiscontinuity ( VARIANT_BOOL * DeliverNewFrame ) {
    return _com_dispatch_method(this, 0xdf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", DeliverNewFrame);
}

#pragma implementation_key(1003)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnDVCommandCompleted ( long NewStateValue, _bstr_t NewStateLabel ) {
    return _com_dispatch_method(this, 0xe0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", NewStateValue, (BSTR)NewStateLabel);
}

#pragma implementation_key(1004)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnEnumerateWindows ( long WindowHandle, _bstr_t WindowName, _bstr_t WindowClass ) {
    return _com_dispatch_method(this, 0xe1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x0008", WindowHandle, (BSTR)WindowName, (BSTR)WindowClass);
}

#pragma implementation_key(1005)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFilterSelected ( _bstr_t FilterName, VARIANT_BOOL * RejectFilter ) {
    return _com_dispatch_method(this, 0xe2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)FilterName, RejectFilter);
}

#pragma implementation_key(1006)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFirstFrameReceived ( ) {
    return _com_dispatch_method(this, 0xe3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1007)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFrameBitmap ( long FrameInfo, long BitmapInfo ) {
    return _com_dispatch_method(this, 0xe4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", FrameInfo, BitmapInfo);
}

#pragma implementation_key(1008)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFrameCaptureCompleted ( long FrameBitmapHandle, long BitmapWidth, long BitmapHeight, long FrameNumber, double FrameTime, enum TxFrameCaptureDest DestType, _bstr_t FileName, VARIANT_BOOL Success, long FrameId ) {
    return _com_dispatch_method(this, 0xe5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003\x0005\x0003\x0008\x000b\x0003", FrameBitmapHandle, BitmapWidth, BitmapHeight, FrameNumber, FrameTime, DestType, (BSTR)FileName, Success, FrameId);
}

#pragma implementation_key(1009)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFrameOverlayUsingDC ( long Dc, long FrameNumber, double FrameTime, long FrameId ) {
    return _com_dispatch_method(this, 0xe6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005\x0003", Dc, FrameNumber, FrameTime, FrameId);
}

#pragma implementation_key(1010)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFrameOverlayUsingDIB ( long FrameBitmapHandle, long FrameNumber, double FrameTime, long FrameId ) {
    return _com_dispatch_method(this, 0xe7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005\x0003", FrameBitmapHandle, FrameNumber, FrameTime, FrameId);
}

#pragma implementation_key(1011)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFrameProgress ( long FrameNumber, double FrameTime, long FrameId ) {
    return _com_dispatch_method(this, 0xe8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0003", FrameNumber, FrameTime, FrameId);
}

#pragma implementation_key(1012)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnFrameProgress2 ( long FrameInfo ) {
    return _com_dispatch_method(this, 0xe9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", FrameInfo);
}

#pragma implementation_key(1013)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnGraphBuilt ( ) {
    return _com_dispatch_method(this, 0xea, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1014)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnInactive ( ) {
    return _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1015)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnLastCommandCompleted ( ) {
    return _com_dispatch_method(this, 0xec, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1016)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnKeyPress ( long VideoWindow, short * Key, long PhysicalKey ) {
    return _com_dispatch_method(this, 0xed, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4002\x0003", VideoWindow, Key, PhysicalKey);
}

#pragma implementation_key(1017)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnLog ( enum TxLogType LogType, _bstr_t Severity, _bstr_t InfoMsg ) {
    return _com_dispatch_method(this, 0xee, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x0008", LogType, (BSTR)Severity, (BSTR)InfoMsg);
}

#pragma implementation_key(1018)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnMotionDetected ( double GlobalMotionRatio, long MaxMotionCellX, long MaxMotionCellY, long FrameBitmapHandle, long FrameNumber, double FrameTime, long FrameId, VARIANT_BOOL * CaptureFrame ) {
    return _com_dispatch_method(this, 0xef, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003\x0003\x0003\x0003\x0005\x0003\x400b", GlobalMotionRatio, MaxMotionCellX, MaxMotionCellY, FrameBitmapHandle, FrameNumber, FrameTime, FrameId, CaptureFrame);
}

#pragma implementation_key(1019)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnMotionNotDetected ( long FrameBitmapHandle, long FrameNumber, double FrameTime, long FrameId, VARIANT_BOOL * CaptureFrame ) {
    return _com_dispatch_method(this, 0xf0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005\x0003\x400b", FrameBitmapHandle, FrameNumber, FrameTime, FrameId, CaptureFrame);
}

#pragma implementation_key(1020)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnMouseDown ( long VideoWindow, enum TxMouseButton Button, long x, long y ) {
    return _com_dispatch_method(this, 0xf1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003", VideoWindow, Button, x, y);
}

#pragma implementation_key(1021)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnMouseMove ( long VideoWindow, long x, long y ) {
    return _com_dispatch_method(this, 0xf2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", VideoWindow, x, y);
}

#pragma implementation_key(1022)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnMouseUp ( long VideoWindow, enum TxMouseButton Button, long x, long y ) {
    return _com_dispatch_method(this, 0xf3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003", VideoWindow, Button, x, y);
}

#pragma implementation_key(1023)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnMouseWheel ( long VideoWindow, VARIANT_BOOL DirectionUp, long x, long y ) {
    return _com_dispatch_method(this, 0xf4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x0003\x0003", VideoWindow, DirectionUp, x, y);
}

#pragma implementation_key(1024)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnNoVideoDevices ( ) {
    return _com_dispatch_method(this, 0xf5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1025)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnPlayerBufferingData ( VARIANT_BOOL StartingToBuffer ) {
    return _com_dispatch_method(this, 0xf6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", StartingToBuffer);
}

#pragma implementation_key(1026)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnPlayerEndOfPlaylist ( ) {
    return _com_dispatch_method(this, 0xf7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1027)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnPlayerEndOfStream ( ) {
    return _com_dispatch_method(this, 0xf8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1028)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnPlayerOpened ( ) {
    return _com_dispatch_method(this, 0xf9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1029)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnPlayerUpdateTrackbarPosition ( long FrameNumber, double FrameTime, long FrameId ) {
    return _com_dispatch_method(this, 0xfa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0003", FrameNumber, FrameTime, FrameId);
}

#pragma implementation_key(1030)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnPreviewStarted ( ) {
    return _com_dispatch_method(this, 0xfb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1031)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnPlayerStateChanged ( enum TxPlayerState OldPlayerState, enum TxPlayerState NewPlayerState ) {
    return _com_dispatch_method(this, 0xfc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", OldPlayerState, NewPlayerState);
}

#pragma implementation_key(1032)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnAuthenticationNeeded ( enum TxAuthenticationType AuthenticationType, _bstr_t Realm, _bstr_t Server, BSTR * UserName, BSTR * Password ) {
    return _com_dispatch_method(this, 0xfd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x0008\x4008\x4008", AuthenticationType, (BSTR)Realm, (BSTR)Server, UserName, Password);
}

#pragma implementation_key(1033)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnRawAudioSample ( long pSampleBuffer, long SampleBufferSize, long SampleDataLength, enum TxFormatType FormatType, long pFormat, long pWaveFormatEx, double SampleStartTime, double SampleStopTime ) {
    return _com_dispatch_method(this, 0xfe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0005\x0005", pSampleBuffer, SampleBufferSize, SampleDataLength, FormatType, pFormat, pWaveFormatEx, SampleStartTime, SampleStopTime);
}

#pragma implementation_key(1034)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnRawVideoSample ( long pSampleBuffer, long SampleBufferSize, long SampleDataLength, enum TxFormatType FormatType, long pFormat, long pBitmapInfoHeader, double SampleStartTime, double SampleStopTime ) {
    return _com_dispatch_method(this, 0xff, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0005\x0005", pSampleBuffer, SampleBufferSize, SampleDataLength, FormatType, pFormat, pBitmapInfoHeader, SampleStartTime, SampleStopTime);
}

#pragma implementation_key(1035)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnRecordingCompleted ( _bstr_t FileName, VARIANT_BOOL Success ) {
    return _com_dispatch_method(this, 0x100, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b", (BSTR)FileName, Success);
}

#pragma implementation_key(1036)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnRecordingPaused ( ) {
    return _com_dispatch_method(this, 0x101, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1037)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnRecordingReadyToStart ( ) {
    return _com_dispatch_method(this, 0x102, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1038)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnRecordingStarted ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x103, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(1039)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnReencodingCompleted ( _bstr_t SourceFile, _bstr_t DestFile, VARIANT_BOOL Success ) {
    return _com_dispatch_method(this, 0x104, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b", (BSTR)SourceFile, (BSTR)DestFile, Success);
}

#pragma implementation_key(1040)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnReencodingProgress ( long Percent, double Position, double Duration ) {
    return _com_dispatch_method(this, 0x105, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Percent, Position, Duration);
}

#pragma implementation_key(1041)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnReencodingStarted ( _bstr_t SourceFile, _bstr_t DestFile ) {
    return _com_dispatch_method(this, 0x106, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)SourceFile, (BSTR)DestFile);
}

#pragma implementation_key(1042)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnReinitializing ( ) {
    return _com_dispatch_method(this, 0x107, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1043)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnResizeVideo ( long SourceWidth, long SourceHeight ) {
    return _com_dispatch_method(this, 0x108, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", SourceWidth, SourceHeight);
}

#pragma implementation_key(1044)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnTextOverlayScrollingCompleted ( long TextOverlayIndex ) {
    return _com_dispatch_method(this, 0x109, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", TextOverlayIndex);
}

#pragma implementation_key(1045)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnTVChannelScanCompleted ( ) {
    return _com_dispatch_method(this, 0x10a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1046)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnTVChannelScanStarted ( long MinChannel, long MaxChannel ) {
    return _com_dispatch_method(this, 0x10b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", MinChannel, MaxChannel);
}

#pragma implementation_key(1047)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnTVChannelSelected ( long Channel, VARIANT_BOOL Locked, long DefaultVideoFrequency, long OverriddenVideoFrequency, long TunerVideoFrequency, long TunerAudioFrequency ) {
    return _com_dispatch_method(this, 0x10c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x0003\x0003\x0003\x0003", Channel, Locked, DefaultVideoFrequency, OverriddenVideoFrequency, TunerVideoFrequency, TunerAudioFrequency);
}

#pragma implementation_key(1048)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnVideoCompressionSettings ( VARIANT_BOOL CanKeyFrameRate, VARIANT_BOOL CanPFramesPerKeyFrame, VARIANT_BOOL CanQuality, VARIANT_BOOL CanWindowSize, VARIANT_BOOL CanSpecifyDataRate, long DefaultFrameRate, long DefaultPFramesPerKey, double DefaultQuality, long DefaultWindowSize, long DefaultDataRate ) {
    return _com_dispatch_method(this, 0x10d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x000b\x000b\x000b\x000b\x0003\x0003\x0005\x0003\x0003", CanKeyFrameRate, CanPFramesPerKeyFrame, CanQuality, CanWindowSize, CanSpecifyDataRate, DefaultFrameRate, DefaultPFramesPerKey, DefaultQuality, DefaultWindowSize, DefaultDataRate);
}

#pragma implementation_key(1049)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnVideoDeviceSelected ( ) {
    return _com_dispatch_method(this, 0x10e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1050)
inline HRESULT Vidgrab_VC6::IVideoGrabberVC6Events::OnVideoFromBitmapsNextFrameNeeded ( VARIANT_BOOL FirstSample ) {
    return _com_dispatch_method(this, 0x10f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", FirstSample);
}
